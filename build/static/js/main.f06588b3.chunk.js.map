{"version":3,"sources":["assets/img/Shasthoboi.svg","assets/img/health.svg","assets/img/allergy.svg","assets/img/treatment.svg","assets/img/disease.svg","assets/img/family.svg","assets/img/lifestyle.svg","store/actions/actionsTypes.js","store/actions/request.js","store/actions/auth.js","pages/layout/Header/Header.js","pages/layout/Footer/Footer.js","pages/components/Validtae/Validation.js","pages/components/Login/Login.js","pages/components/shared/Notification/Notification.js","pages/components/SignUp/SignUp.js","pages/components/History/History.js","store/actions/history.js","pages/components/Health/Health.js","store/actions/health.js","pages/components/Upload/Upload.js","pages/components/Enroll/Enroll-navigation/EnrollNavigation.js","store/actions/enroll.js","pages/components/Enroll/Enroll-components/PersonalInfo/PersonalInfo.js","pages/components/Enroll/Enroll-components/BillingInfo/BillingInfo.js","pages/components/Enroll/Enroll-components/HealthIdentification/HealthIdentification.js","pages/components/Enroll/Enroll-components/HealthAllergy/HealthAllergy.js","pages/components/Enroll/Enroll-components/HealthDiseases/HealthDiseases.js","pages/components/Enroll/Enroll-components/HealthTreatments/HealthTreatments.js","pages/components/Enroll/Enroll-components/HealthTrends/HealthTrends.js","pages/components/Enroll/Enroll-components/HealthRiskFactors/HealthRiskFactors.js","pages/components/Enroll/Enroll-components/HealthImaging/HealthImaging.js","pages/components/Enroll/Enroll-components/HealthFamilyDoctor/HealthFamilyDoctor.js","pages/components/Enroll/Enroll.js","pages/components/Patient/Patient.js","store/actions/patient.js","pages/components/EditPatientHistory/EditPatientHistory.js","pages/components/Enroll/Edit-enroll/Edit-enroll.js","pages/components/Profile/Profile.js","store/actions/user.js","auth.js","Router.js","App.js","serviceWorker.js","store/reducers/auth.js","store/reducers/health.js","store/reducers/history.js","store/reducers/patient.js","store/reducers/enroll.js","store/reducers/user.js","store/reducers/index.js","index.js"],"names":["module","exports","actionsTypes","cookies","Cookies","request","axios","create","headers","get","transformResponse","res","defaults","baseURL","Header","props","History","useHistory","dispatch","useDispatch","Navbar","className","bg","expand","variant","fixed","Brand","to","src","logo","width","alt","Toggle","aria-controls","Collapse","id","Nav","NavDropdown","title","icon","faCog","href","faUser","tabIndex","Item","onClick","type","push","faArrowAltCircleRight","Footer","Validation","errMsg","Form","Control","Feedback","Login","React","useState","mobile","passcode","isLoading","errorMessage","success","validated","data","setData","history","useSelector","state","auth","login","error","handleInputChange","event","target","name","value","handleSubmit","payload","preventDefault","stopPropagation","Promise","resolve","reject","post","then","resp","JSON","parse","set","authtoken","path","localStorage","setItem","stringify","catch","response","message","noValidate","onSubmit","faExclamationTriangle","data-dismiss","Group","controlId","required","onChange","Check","label","Button","description","notification","placement","duration","SignUp","firstName","lastName","isSubmit","handeleInputChange","e","signup","Notification","Container","Row","address","Label","as","rows","columns","dataIndex","sorter","compare","a","b","Date","date","render","records","rel","filepath","key","usehistory","val","setVal","filterdata","setFilterdata","historyId","useParams","useEffect","array","forEach","i","editPatientHealth","faEdit","faTrash","obj","report","historyError","undefined","loading","toLowerCase","filterdHistory","filter","indexOf","filterHistory","newArray","length","o1","some","o2","countId","placeholder","dataSource","size","Health","isFamilyHistoryMore","Lifestyle","console","log","status","health","patientInfo","user_info","identification","healthRecord","health_record","active_past_diseases","health_trends","allergy","active_discontinued_treatments","risk_factors","firstname","lastname","date_of_birth","age","sex","Col","md","medicinal","food","sensitivity","allergyPic","lifestyle","slice","treatment","active","past","repeat_prescription","change_of_drug","other","deformity","disease","family","family_history","healthImage","Upload","role","style","padding","fontSize","color","height","faFilePdf","faTimes","ProgressBar","striped","animated","now","withRouter","location","pathname","setNewTab","changeTab","disabled","currentTabNumber","isEdit","currentTab","setPatientHealthInfo","PersonalInfo","dateofbirth","enroll","addPatientInfo","changeCurrentTabNumber","userInfo","setValidated","currentTarget","checkValidity","htmlFor","moment","dateString","spinning","BillingInfo","payment_method","setBillingInfo","payment_status","handleOnChange","fontFamily","fontWeight","selected","billingInformation","HealthIdentification","setHealthIdentificationInformation","goBack","healthIdentificationInformation","HealthAllergy","setHealthAllergyInformation","healthAllergyInformation","HealthDiseases","setHealthDiseasesInformation","healthDiseasesInformation","HealthTreatments","setHealthTreatmentsInformation","healthTreatmentsInformation","HealthTrends","setHealthTrendsInformation","healthTrendsInformation","HealthRiskFactors","setHealthRiskFactorsInformation","healthRiskFactorsInformation","HealthImaging","imaging","setHealthImagingInformation","healthImagingInformation","HealthFamilyDoctor","family_doctor","setFamilyDoctorInformation","loader","familyDoctorInformation","Enroll","patientHealthInfo","setCurrentTab","setCurrentTabNumber","setTabNumber","setTab","temp","HealthIdentificationInformation","HealthAllergyInformation","HealthDiseasesInformation","HealthTreatmentsInformation","HealthTrendsInformation","HealthRiskFactorsInformation","HealthImagingInformation","FamilyDoctorInformation","goPreviousPage","tabNumber","tabName","setUserInfo","addPatientHealthInfo","billing","Patient","patient","patients","paitents","map","phone","actions","medicalAction","children","EditPatientHistory","initialState","file","documentId","isFileUploading","previousPath","isEditPatient","editPatientId","patientId","setState","stateValue","patientHistory","getItem","uploadHistory","addHistory","addNewPatientHistory","formData","FormData","append","addPatientHistory","updatePatientHistory","document_id","uploadPatientHistory","removeItem","Fragment","File","files","custom","EditEnroll","editEnrollId","isPatientHistoryLoading","getPatientHealthInfo","Profile","isProfileLoading","isUpdating","user","currentUser","Auth","getAuth","PrivateRoute","Component","component","rest","Router","exact","App","Boolean","window","hostname","match","initData","updateCurrentUser","combineReducers","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducer","applyMiddleware","thunk","app","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f06588b3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Shasthoboi.e1096356.svg\";","module.exports = __webpack_public_path__ + \"static/media/health.99ba0b26.svg\";","module.exports = __webpack_public_path__ + \"static/media/allergy.cf108b5a.svg\";","module.exports = __webpack_public_path__ + \"static/media/treatment.14070416.svg\";","module.exports = __webpack_public_path__ + \"static/media/disease.2137ff09.svg\";","module.exports = __webpack_public_path__ + \"static/media/family.91aa3eac.svg\";","module.exports = __webpack_public_path__ + \"static/media/lifestyle.98c2d4c4.svg\";","\nconst LOGIN = \"LOGIN\"\nconst LOGIN_SUCCESS = \"LOGIN_SUCCESS\"\nconst LOGIN_FAILURE = \"LOGIN_FAILURE\"\n\n//logout \nexport const LOGOUT = 'LOGOUT'\n\n\n//Register\nconst SIGNUP = \"SIGNUP\"\nconst SIGNUP_SUCCESS = \"SIGNUP_SUCCESS\"\nconst SIGNUP_FAILURE = \"SIGNUP_FAILURE\"\n\nconst GET_DOCTOR_PROFILE = \"GET_DOCTOR_PROFILE\"\nconst GET_DOCTOR_PROFILE_SUCCESS = \"GET_DOCTOR_PROFILE_SUCCESS\"\nconst GET_DOCTOR_PROFILE_FAILURE = \"GET_DOCTOR_PROFILE_FAILURE\"\n\nconst UPDATE_DOCTOR_PROFILE = \"UPDATE_DOCTOR_PROFILE\"\nconst UPDATE_DOCTOR_PROFILE_SUCCESS = \"UPDATE_DOCTOR_PROFILE_SUCCESS\"\nconst UPDATE_DOCTOR_PROFILE_FAILURE = \"UPDATE_DOCTOR_PROFILE_FAILURE\"\n\nconst GET_HEALTH = \"GET_HEALTH\"\nconst GET_HEALTH_SUCCESS = \"GET_HEALTH_SUCCESS\"\nconst GET_HEALTH_FAILURE = \"GET_HEALTH_FAILURE\"\n\n\nconst GET_PATIENTS = \"GET_PATIENTS\"\nconst GET_PATIENTS_SUCCESS = \"GET_PATIENTS_SUCCESS\"\nconst GET_PATIENTS_FAILURE = \"GET_PATIENTS_FAILURE\"\n\nconst GET_PATIENT_DETAIL = \"GET_PATIENT_DETAIL\"\nconst GET_PATIENT_DETAIL_SUCCESS = \"GET_PATIENT_DETAIL_SUCCESS\"\nconst GET_PATIENT_DETAIL_FAILURE = \"GET_PATIENT_DETAIL_FAILURE\"\n\nconst SET_PATIENT_PERSONAL_INFO = \"SET_PATIENT_PERSONAL_INFO\"\nconst SET_PATIENT_PERSONAL_INFO_SUCCESS = \"SET_PATIENT_PERSONAL_INFO_SUCCESS\"\nconst SET_PATIENT_PERSONAL_INFO_FAILURE = \"SET_PATIENT_PERSONAL_INFO_FAILURE\"\n\n\nconst SET_PATIENT_HEALTH_INFO = \"SET_PATIENT_HEALTH_INFO\"\nconst SET_PATIENT_HEALTH_INFO_SUCCESS = \"SET_PATIENT_HEALTH_INFO_SUCCESS\"\nconst SET_PATIENT_HEALTH_INFO_FAILURE = \"SET_PATIENT_HEALTH_INFO_FAILURE\"\nconst CLEAR_PATIENT_HEALTH_INFO = \"CLEAR_PATIENT_HEALTH_INFO\"\n\nconst GET_PATIENT_HEALTH_INFO = \"GET_PATIENT_HEALTH_INFO\"\nconst GET_PATIENT_HEALTH_INFO_SUCCESS = \"GET_PATIENT_HEALTH_INFO_SUCCESS\"\nconst GET_PATIENT_HEALTH_INFO_FAILURE = \"GET_PATIENT_HEALTH_INFO_FAILURE\"\n\nconst GET_PATIENT_HEALTH_RECORD = \"GET_PATIENT_HEALTH_RECORD\"\nconst GET_PATIENT_HEALTH_RECORD_SUCCESS = \"GET_PATIENT_HEALTH_RECORD_SUCCESS\"\nconst GET_PATIENT_HEALTH_RECORD_FAILURE = \"GET_PATIENT_HEALTH_RECORD_FAILURE\"\n\nconst UPLOAD_PATIENT_HISTORY = \"UPLOAD_PATIENT_HISTORY\"\nconst UPLOAD_PATIENT_HISTORY_SUCCESS = \"UPLOAD_PATIENT_HISTORY_SUCCESS\"\nconst UPLOAD_PATIENT_HISTORY_FAILURE = \"UPLOAD_PATIENT_HISTORY_FAILURE\"\n\nconst ADD_PATIENT_HISTORY = \"ADD_PATIENT_HISTORY\"\nconst ADD_PATIENT_HISTORY_SUCCESS = \"ADD_PATIENT_HISTORY_SUCCESS\"\nconst ADD_PATIENT_HISTORY_FAILURE = \"ADD_PATIENT_HISTORY_FAILURE\"\n\n\nconst GET_HISTORY = \"GET_HISTORY\"\nconst GET_HISTORY_SUCCESS = \"GET_HISTORY_SUCCESS\"\nconst GET_HISTORY_FAILURE = \"GET_HISTORY_FAILURE\"\n\nexport {\n    LOGIN,\n    LOGIN_SUCCESS,\n    LOGIN_FAILURE,\n\n    SIGNUP,\n    SIGNUP_SUCCESS,\n    SIGNUP_FAILURE,\n\n    GET_DOCTOR_PROFILE,\n    GET_DOCTOR_PROFILE_SUCCESS,\n    GET_DOCTOR_PROFILE_FAILURE,\n\n    UPDATE_DOCTOR_PROFILE,\n    UPDATE_DOCTOR_PROFILE_SUCCESS,\n    UPDATE_DOCTOR_PROFILE_FAILURE,\n\n    GET_HEALTH,\n    GET_HEALTH_SUCCESS,\n    GET_HEALTH_FAILURE,\n\n    GET_PATIENTS,\n    GET_PATIENTS_SUCCESS,\n    GET_PATIENTS_FAILURE,\n\n    GET_PATIENT_DETAIL,\n    GET_PATIENT_DETAIL_SUCCESS,\n    GET_PATIENT_DETAIL_FAILURE,\n\n    SET_PATIENT_PERSONAL_INFO,\n    SET_PATIENT_PERSONAL_INFO_SUCCESS,\n    SET_PATIENT_PERSONAL_INFO_FAILURE,\n\n    SET_PATIENT_HEALTH_INFO,\n    SET_PATIENT_HEALTH_INFO_SUCCESS,\n    SET_PATIENT_HEALTH_INFO_FAILURE,\n    CLEAR_PATIENT_HEALTH_INFO,\n\n    GET_PATIENT_HEALTH_INFO,\n    GET_PATIENT_HEALTH_INFO_SUCCESS,\n    GET_PATIENT_HEALTH_INFO_FAILURE,\n\n    GET_PATIENT_HEALTH_RECORD,\n    GET_PATIENT_HEALTH_RECORD_SUCCESS,\n    GET_PATIENT_HEALTH_RECORD_FAILURE,\n\n    UPLOAD_PATIENT_HISTORY,\n    UPLOAD_PATIENT_HISTORY_SUCCESS,\n    UPLOAD_PATIENT_HISTORY_FAILURE,\n\n    ADD_PATIENT_HISTORY,\n    ADD_PATIENT_HISTORY_SUCCESS,\n    ADD_PATIENT_HISTORY_FAILURE,\n\n    GET_HISTORY,\n    GET_HISTORY_SUCCESS,\n    GET_HISTORY_FAILURE\n}\n\nexport const actionsTypes = {\n    LOGIN,\n    LOGIN_SUCCESS,\n    LOGIN_FAILURE,\n    LOGOUT,\n\n    SIGNUP,\n    SIGNUP_SUCCESS,\n    SIGNUP_FAILURE,\n\n    GET_DOCTOR_PROFILE,\n    GET_DOCTOR_PROFILE_SUCCESS,\n    GET_DOCTOR_PROFILE_FAILURE,\n\n    UPDATE_DOCTOR_PROFILE,\n    UPDATE_DOCTOR_PROFILE_SUCCESS,\n    UPDATE_DOCTOR_PROFILE_FAILURE,\n\n    GET_HEALTH,\n    GET_HEALTH_SUCCESS,\n    GET_HEALTH_FAILURE,\n\n    GET_PATIENTS,\n    GET_PATIENTS_SUCCESS,\n    GET_PATIENTS_FAILURE,\n\n    GET_PATIENT_DETAIL,\n    GET_PATIENT_DETAIL_SUCCESS,\n    GET_PATIENT_DETAIL_FAILURE,\n\n\n    SET_PATIENT_PERSONAL_INFO,\n    SET_PATIENT_PERSONAL_INFO_SUCCESS,\n    SET_PATIENT_PERSONAL_INFO_FAILURE,\n    CLEAR_PATIENT_HEALTH_INFO,\n\n    GET_PATIENT_HEALTH_INFO,\n    GET_PATIENT_HEALTH_INFO_SUCCESS,\n    GET_PATIENT_HEALTH_INFO_FAILURE,\n\n    SET_PATIENT_HEALTH_INFO,\n    SET_PATIENT_HEALTH_INFO_SUCCESS,\n    SET_PATIENT_HEALTH_INFO_FAILURE,\n\n    GET_PATIENT_HEALTH_RECORD,\n    GET_PATIENT_HEALTH_RECORD_SUCCESS,\n    GET_PATIENT_HEALTH_RECORD_FAILURE,\n\n    UPLOAD_PATIENT_HISTORY,\n    UPLOAD_PATIENT_HISTORY_SUCCESS,\n    UPLOAD_PATIENT_HISTORY_FAILURE,\n\n    ADD_PATIENT_HISTORY,\n    ADD_PATIENT_HISTORY_SUCCESS,\n    ADD_PATIENT_HISTORY_FAILURE,\n\n    GET_HISTORY,\n    GET_HISTORY_SUCCESS,\n    GET_HISTORY_FAILURE,\n\n}","import axios from 'axios';\nimport Cookies from 'universal-cookie';\nconst cookies = new Cookies();\nconst request =  axios.create({\n  headers: {\n    'Content-Type': 'application/json',\n    'Authorization': `Bearer ${cookies.get('patientToken')}`\n  },  \n   transformResponse: [res => {\n    return res\n   }]\n\n});\nrequest.defaults.baseURL = 'http://api.sasthoboi.com/src/bootstrap.php';\n\nexport default request;\n","import { actionsTypes } from './actionsTypes'\nimport request from './request'\nimport Cookies from 'universal-cookie';\nconst cookies = new Cookies();\n\nexport const login = payload => dispatch => {\n    return new Promise((resolve,reject)=>{\n        request\n          .post(`/auth/login`,payload)\n          .then(({ data }) => {\n            let resp  = JSON.parse(data);\n            cookies.set('patientToken', `${resp.authtoken}`, { path: '/' });\n            localStorage.setItem('PAU', JSON.stringify(resp.id));            dispatch({\n              type: actionsTypes.LOGIN_SUCCESS,\n              data: data\n            })\n            resolve(data)\n          })\n          .catch(({ response }) => {\n            const error = response ? JSON.parse(response.data) : {message:'unknown error occured'}\n            dispatch({\n              type: actionsTypes.LOGIN_FAILURE,\n              error :  error\n            });\n            reject(error);\n          });\n      })\n  }\n\n\nexport const signup = payload => dispatch => {\n  return new Promise((resolve,reject)=>{\n      request\n        .post(`/doctor`,payload)\n        .then(({ data }) => {\n          localStorage.setItem('PAU',data);\n          dispatch({\n            type: actionsTypes.SIGNUP_SUCCESS,\n            data: data\n          })\n          resolve(data)\n        })\n        .catch(({ response }) => {\n          const error = response ? JSON.parse(response.data) : {message:'unkown error occured'}\n          dispatch({\n            type: actionsTypes.SIGNUP_FAILURE,\n            error :  error\n          });\n          reject(error);\n        });\n    })\n}\n\n  export const LogOut = () => {\n    return {\n    type:  actionsTypes.LOGOUT\n    }\n  }","import React from 'react';\n\nimport './Header.css';\nimport logo from './../../../assets/img/Shasthoboi.svg';\nimport { Navbar, Nav, NavDropdown } from 'react-bootstrap';\nimport { Link, useHistory } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowAltCircleRight, faUser, faCog } from '@fortawesome/free-solid-svg-icons';\nimport { useDispatch } from 'react-redux';\nimport { LogOut } from './../../../store/actions/auth';\n\nconst Header = (props) => {\n  const History = useHistory();\n  const dispatch = useDispatch();\n  const Log_Out = () => {\n    dispatch(LogOut());\n    History.push('/login');\n  };\n\n  return (\n    <header>\n      <Navbar className=\"header-fixed\" bg=\"dark\" expand=\"lg\" variant=\"dark\" fixed=\"top\">\n        <Navbar.Brand>\n          <Link to=\"/patient\">\n            <img src={logo} width=\"100\" alt=\"\" />\n          </Link>\n        </Navbar.Brand>\n\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <Link to=\"/patient\">Patients</Link>\n            <Link to=\"/enroll\">Enroll patient</Link>\n          </Nav>\n\n          <NavDropdown title={<FontAwesomeIcon icon={faCog} />} id=\"basic-nav-dropdown\">\n            <div className=\"dropDown--item\" href=\"#\">\n              <Link to=\"/profile\"> <FontAwesomeIcon icon={faUser} /> View Profile</Link>\n            </div>\n\n            <div tabIndex=\"-1\" className=\"dropdown-divider\"></div>\n\n            <NavDropdown.Item onClick={Log_Out}>\n              <FontAwesomeIcon icon={faArrowAltCircleRight} />\n              <div>Logout</div>\n            </NavDropdown.Item>\n          </NavDropdown>\n        </Navbar.Collapse>\n      </Navbar>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from 'react';\n\nimport './Footer.css';\n\nconst Footer = (props) => (\n  <footer className=\"footer\">\n    <span className=\"text-muted\">\n      <a href=\"http://triomedtech.com\">© 2020 TRIO MEDTECH LTD</a>\n    </span>\n  </footer>\n);\n\nexport default Footer;\n","import React from 'react'\nimport { Form } from 'react-bootstrap'\n\nconst Validation = ({ errMsg }) => {\n    return <Form.Control.Feedback type=\"invalid\">{errMsg}</Form.Control.Feedback>\n}\n\nexport default Validation\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { login } from './../../../store/actions/auth';\nimport { Form, Button } from 'react-bootstrap';\nimport logo from './../../../assets/img/Shasthoboi.svg';\nimport { useHistory, Link } from 'react-router-dom';\nimport Validation from '../Validtae/Validation'\nimport './login.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faExclamationTriangle } from '@fortawesome/free-solid-svg-icons';\n\nconst Login = () => {\n  const initialState = {\n    mobile: '',\n    passcode: '',\n    isLoading: false,\n    errorMessage: null,\n    success: false,\n    validated: false\n  };\n\n  const [data, setData] = React.useState(initialState);\n\n  const history = useHistory();\n\n  useSelector((state) => {\n    if (state && state.auth.login.data) {\n      history.push('/patient');\n    }\n  });\n\n  const errorMessage = useSelector((state) => state.auth.login.error);\n\n  const dispatch = useDispatch();\n\n  const handleInputChange = (event) => {\n    setData({\n      ...data,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (data.mobile && data.passcode) {\n      setData({\n        ...data,\n        isLoading: true,\n        errorMessage: null,\n        validated: false\n      });\n      dispatch(login({ mobile: data.mobile, passcode: data.passcode }));\n    } else {\n      setData({\n        ...data,\n        validated: true\n      })\n    }\n\n  };\n  return (\n    <>\n      <div className=\"Login\">\n        <div className='logo'>\n          <div className='logoBox'>\n            <img src={logo} width=\"100\" alt=\"\" />\n          </div>\n        </div>\n        <Form noValidate validated={data.validated} onSubmit={handleSubmit}>\n          <span className='formTitle'>Login to your account</span>\n          {errorMessage ? (\n            <div className=\"alert alert-danger input100 alert-dismissible  show\">\n              <h4 className=\"alert-heading\">\n              <FontAwesomeIcon icon={faExclamationTriangle} /> Error!\n              </h4>\n              <p>{errorMessage && errorMessage.message ? errorMessage.message : 'Login Failed'}</p>\n              <button type=\"button\" className=\"close\" data-dismiss=\"alert\">\n                &times;\n              </button>\n            </div>\n          ) : (\n              <div></div>\n            )}\n          <div className=\"loginForm\">\n            <Form.Group controlId=\"mobile\">\n              <label>Enter your mobile number eg. 0171100888</label>\n              <Form.Control\n                required\n                type=\"text\"\n                name=\"mobile\"\n                onChange={handleInputChange}\n                value={data.mobile}\n              />\n              <Validation errMsg=\"Mobile field is empty\" />\n            </Form.Group>\n\n            <Form.Group controlId=\"passcode\">\n              <div className=\"pt-2\">\n                <label>Enter your access code (sent via SMS)</label>\n              </div>\n              <Form.Control\n                required\n                type=\"password\"\n                name=\"passcode\"\n                onChange={handleInputChange}\n                value={data.passcode}\n              />\n              <Validation errMsg=\"Passcode filed is empty\" />\n            </Form.Group>\n\n            <Form.Group className=\"my-4\">\n              <Form.Check type=\"checkbox\" label=\"Keep me logged in for one week\" name=\"remember-me\" />\n            </Form.Group>\n\n            <div className=\"loingBtn\">\n              <Button\n                className=\"btn btn-primary w-100\"\n                // disabled={!data.mobile && !data.passcode}\n                onClick={handleSubmit}\n              >\n                {/* <Link to=\"/Health\" style={{ color: '#ffff' }}> */}\n                LogIn\n              {/* </Link> */}\n              </Button>\n            </div>\n            <div className=\"registerLink\">\n              <span>Don't have an account?</span> <Link to=\"/signup\">Register</Link>\n            </div>\n\n          </div>\n        </Form>\n      </div>\n    </>\n  );\n};\n\nexport default Login;\n","// import React from 'react';\n// import ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport {  notification } from 'antd';\n\n\nexport default (type,title,description) => {\n  notification[type]({\n    message: title,\n    description:description,\n    placement:'bottomRight',\n    duration: 0\n  })\n}\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Form, Container, Row, Button } from 'react-bootstrap';\nimport { signup } from './../../../store/actions/auth';\nimport { useHistory } from 'react-router-dom';\nimport Validation from '../Validtae/Validation'\nimport Notification from '../shared/Notification/Notification'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faExclamationTriangle } from '@fortawesome/free-solid-svg-icons';\n\nimport { Link } from 'react-router-dom';\n\nimport './signUp.scss';\n\nconst SignUp = () => {\n  const initialState = {\n    firstName: '',\n    lastName: '',\n    mobile: '',\n    isLoading: false,\n    errorMessage: { message: 'test' },\n    success: false,\n    validated: false,\n    isSubmit:false,\n  };\n\n  const [data, setData] = useState(initialState);\n\n  const handeleInputChange = (e) => {\n    const { name, value } = e.target;\n    setData({\n      ...data,\n      [name]: value,\n    });\n  };\n\n  const history = useHistory();\n  useSelector((state) => {\n    if (state && state.auth.signup.data && data.isSubmit) {\n     debugger\n      setData({\n        ...data,\n        isSubmit:false\n      })\n      Notification(\n        'success',\n        'Congratulations!',\n        'Welcome to doctor board, now you can login successfully!'\n      )\n      history.push('/login');\n    }\n  });\n\n  const errorMessage = useSelector((state) => state.auth.signup.error);\n\n  const dispatch = useDispatch();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    if (data.firstName && data.lastName && data.mobile && data.address) {\n      setData({\n        ...data,\n        isLoading: true,\n        errorMessage: null,\n        validated: false,\n        isSubmit:true\n      });\n      dispatch(signup({ firstName: data.firstName, lastName: data.lastName, mobile: data.mobile, address: data.address }));\n    } else {\n      setData({\n        ...data,\n        validated: true\n      });\n    }\n\n  };\n\n  return (\n    <div className=\"SignUp\">\n      <Container className=\"container-height\">\n        <Row>\n          \n          <div className=\"col-md-6 sign-up-col-6\">\n            <div className=\"middle\">\n              <h3 className=\"pb-3\">Get your স্বাস্থ্যবই account</h3>\n            </div>\n            {errorMessage ? (\n            <div className=\"alert alert-danger input100 alert-dismissible  show\">\n              <h4 className=\"alert-heading\">\n              <FontAwesomeIcon icon={faExclamationTriangle} /> Error!\n              </h4>\n              <p>{errorMessage && errorMessage.message ? errorMessage.message : 'signup Failed'}</p>\n              <button type=\"button\" className=\"close\" data-dismiss=\"alert\">\n                &times;\n              </button>\n            </div>\n          ) : (\n              <div></div>\n            )}\n            <Form noValidate validated={data.validated} onSubmit={handleSubmit} >\n              <Form.Group controlId=\"validationCustom01\">\n                <Form.Label>First Name</Form.Label>\n                <Form.Control\n                  required\n                  name=\"firstName\"\n                  type=\"text\"\n                  onChange={handeleInputChange}\n                />\n                <Validation errMsg=\"First name is empty\" />\n              </Form.Group>\n\n              <Form.Group controlId=\"validationCustom02\">\n                <Form.Label>Last Name</Form.Label>\n                <Form.Control\n                  required\n                  name=\"lastName\"\n                  type=\"text\"\n                  onChange={handeleInputChange}\n                />\n                <Validation errMsg=\"Last name is empty\" />\n              </Form.Group>\n\n              <Form.Group controlId=\"validationCustom03\">\n                <Form.Label>Mobile</Form.Label>\n                <Form.Control\n                  required\n                  name=\"mobile\"\n                  type=\"number\"\n                  onChange={handeleInputChange}\n                />\n                <Validation errMsg=\"Mobile field is empty\" />\n              </Form.Group>\n\n              <Form.Group controlId=\"validationCustom04\">\n                <Form.Label>address</Form.Label>\n                <Form.Control\n                  required\n                  name=\"address\"\n                  as=\"textarea\"\n                  rows=\"3\"\n                  onChange={handeleInputChange}\n                />\n                <Validation errMsg=\"Address field is empty\" />\n              </Form.Group>\n\n              <div className=\"signUpBtn\">\n                <Button type=\"submit\"\n                  // disabled={!data.firstName && !data.lastName && !data.mobile && !data.address}\n                  className=\"btn btn-primary w-100\">\n                  Sign up\n                </Button>\n              </div>\n\n              <div className=\"registerLink\">\n                <span>Have an account?</span> <Link to=\"/Login\" >Login</Link>\n              </div>\n            </Form>\n          </div>\n        </Row>\n      </Container>\n    </div>\n  );\n};\n\nexport default SignUp;\n","import React, { useEffect, useState } from 'react';\n\nimport './History.scss';\nimport { Form } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faExclamationTriangle } from '@fortawesome/free-solid-svg-icons';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getHistory } from './../../../store/actions/history';\nimport Header from '../../layout/Header/Header';\nimport { Table } from 'antd';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { faEdit, faTrash } from '@fortawesome/free-solid-svg-icons';\nimport Notification from '../shared/Notification/Notification'\n\n\n\nexport const History = () => {\n\n  const columns = [\n    {\n      title: 'Type',\n      dataIndex: 'type',\n      width: '10%',\n    },\n    {\n      title: 'Date',\n      dataIndex: 'date',\n      width: '10%',\n      sorter: {\n        compare: (a, b) => new Date(a.date) - new Date(b.date),\n      },\n    },\n    {\n      title: 'Remarks',\n      dataIndex: 'report',\n      width: '60%',\n    },\n    {\n      title: 'File',\n      width: '10%',\n      render: (records) => (\n        <a target=\"_blank\" rel=\"noopener noreferrer\" href={records.filepath}>\n          Open Link\n        </a>\n      ),\n    },\n    {\n      title: 'Action',\n      width: '10%',\n      dataIndex: 'actions',\n      key: 'actions',\n      // render: (records) => (\n      //   <div className=\"table-action-btn\">\n      //     <div onClick={() =>this.editPatientHealth(records.id)}>\n      //       <FontAwesomeIcon icon={faEdit} />\n      //     </div>\n      //     <FontAwesomeIcon icon={faTrash} />\n      //   </div>\n      // ),\n    },\n  ];\n\n  const usehistory = useHistory();\n  const dispatch = useDispatch();\n  const [val, setVal] = useState('');\n  const [filterdata, setFilterdata] = useState();\n  let { historyId } = useParams();\n\n  useEffect(() => {\n    dispatch(getHistory({ id: historyId }));\n  }, []);\n\n  const history = useSelector((state) => {\n    if (state && state.history.history.data) {\n      let array = state.history.history.data;\n      array.forEach((val, i) => {\n        array[i]['countId'] = i + 1;\n        array[i]['actions'] = (\n          <div className=\"table-action-btn\">\n            <div onClick={() => editPatientHealth(val)}>\n              <FontAwesomeIcon icon={faEdit} />\n            </div>\n            <div>\n              <FontAwesomeIcon icon={faTrash} />\n            </div>\n          </div>\n        )\n      })\n      return array\n    }\n  });\n\n  const editPatientHealth = val => {\n    let obj = JSON.stringify({ type: val.type, date: val.date, report: val.report, filepath: val.filepath })\n    localStorage.setItem('patientHistory', obj);\n    usehistory.push(`/editPatientHistory/${historyId}/${val.id}`);\n  }\n\n\n  const SearchFilter = (e) => {\n    setVal(e.target.value)\n    let value = e.target.value.toLowerCase();\n    if (value) {\n      let filterdHistory = history && history.filter(val => val.report.toLowerCase().indexOf(value) !== -1);\n      let filterHistory = history && history.filter(val => val.type.toLowerCase().indexOf(value) !== -1);\n      let newArray = filterHistory && filterHistory.length && filterHistory.filter(o1 => !filterdHistory.some(o2 => o1.countId === o2.countId));\n      if (newArray.length) {\n        if (filterdHistory.length) newArray.push(filterdHistory);\n      }\n      else {\n        newArray = filterdHistory;\n      }\n      setFilterdata(newArray);\n    } else {\n      setFilterdata(history);\n    }\n  }\n\n  const data = filterdata ? filterdata : history;\n\n  const historyError = useSelector((state) => {\n    if (\n      state &&\n      state.history.history.error !== null &&\n      state.history.history.error !== undefined\n    ) {\n      Notification(\n        'error',\n        'Error!',\n        state.history.history.error.message ? state.history.history.error.message : ''\n      )\n      return state.history.history.error;\n    }\n  });\n\n  const loading = (history !== null && history !== undefined) || historyError;\n  return (\n    <div className=\"History\">\n      <Header />\n      <div className=\"container container-height\">\n        <div className=\"pt-5\">\n          <div className=\"input\">\n            <Form.Control value={val} onChange={SearchFilter} type=\"text\" placeholder=\"Search\" />\n          </div>\n          <Table loading={!loading} columns={columns} dataSource={data} size=\"middle\" />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default History;\n","import { actionsTypes } from './actionsTypes'\nimport request from './request'\n\nexport const getHistory = payload => dispatch => {\n  return new Promise((resolve, reject) => {\n    request\n      .get(`/patient/${payload.id}/history`)\n      .then(({ data }) => {\n        dispatch({\n          type: actionsTypes.GET_HISTORY_SUCCESS,\n          data: data ? JSON.parse(data).history : {}\n        })\n        resolve(data)\n      })\n      .catch(({ response }) => {\n        \n        const error = response ? JSON.parse(response.data) : { message: 'unknown error' }\n        dispatch({\n          type: actionsTypes.GET_HISTORY_FAILURE,\n          error: error ? error : {}\n        })\n        reject(error)\n      })\n  })\n}\n\nexport const uploadPatientHistory = (payload,patientId,document_id) => dispatch => {\n  return new Promise((resolve, reject) => {\n    request\n      .post(`/patient/${patientId}/history/${document_id}`,payload)\n      .then(({ data }) => {\n        dispatch({\n          type: actionsTypes.UPLOAD_PATIENT_HISTORY_SUCCESS,\n          data: data ? JSON.parse(data) : {}\n        })\n        resolve(data)\n      })\n      .catch(({ response }) => {\n        const error = response ? JSON.parse(response.data) : { message: 'unknown error' }\n        dispatch({\n          type: actionsTypes.UPLOAD_PATIENT_HISTORY_FAILURE,\n          error: error \n        })\n        reject(error)\n      })\n  })\n}\n\nexport const addPatientHistory = (payload,patientId) => dispatch => {\n  return new Promise((resolve, reject) => {\n    request\n      .post(`/patient/${patientId}/history`,payload)\n      .then(({ data }) => {\n        dispatch({\n          type: actionsTypes.ADD_PATIENT_HISTORY_SUCCESS,\n          data: data ? JSON.parse(data) : {}\n        })\n        resolve(data)\n      })\n      .catch(({ response }) => {\n        const error = response ? JSON.parse(response.data) : { message: 'unknown error' }\n        dispatch({\n          type: actionsTypes.ADD_PATIENT_HISTORY_FAILURE,\n          error: error\n        })\n        reject(error)\n      })\n  })\n}\n","import React, { useEffect, useState } from 'react'\nimport './Health.scss'\nimport healthImage from './../../../assets/img/health.svg'\nimport allergyPic from './../../../assets/img/allergy.svg'\nimport treatment from './../../../assets/img/treatment.svg'\nimport disease from './../../../assets/img/disease.svg'\nimport family from './../../../assets/img/family.svg'\nimport lifestyle from './../../../assets/img/lifestyle.svg'\nimport { getHealth } from './../../../store/actions/health'\nimport Header from '../../layout/Header/Header'\nimport { useParams } from 'react-router-dom'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Notification from '../shared/Notification/Notification'\n\nexport const Health = () => {\n  const dispatch = useDispatch()\n\n  const [isFamilyHistoryMore, setisFamilyHistoryMore] = useState(false)\n  const [Lifestyle, setLifestyle] = useState(false)\n  const [Health, setHealth] = useState(false)\n  let { id } = useParams()\n\n  useEffect(() => {\n    dispatch(getHealth({ id: id }))\n  }, [])\n\n  const health = useSelector(state => {\n    if (state && state.health.health.data) {\n      return state.health.health.data\n    }\n  })\n\n  const patientInfo = useSelector(state => {\n    if (state && state.health.health.data) {\n      return state.health.health.data.user_info\n    }\n  })\n\n  const identification = useSelector(state => {\n    if (state && state.health.health.data) {\n      return state.health.health.data.identification\n    }\n  })\n\n  const healthRecord = useSelector(state => {\n    if (\n      state &&\n      state.health.health.data &&\n      state.health.health.data.health_record.active_past_diseases\n    ) {\n      return state.health.health.data.health_record.active_past_diseases\n    }\n  })\n\n  useSelector(state => {\n    if (\n      state &&\n      state.health.health.error !== null &&\n      state.health.health.error !== undefined\n    ) {\n      Notification(\n        'error',\n        'Error!',\n        state.health.health.error.message\n          ? state.health.health.error.message\n          : ''\n      )\n    }\n  })\n\n  const {\n    health_trends,\n    allergy,\n    active_discontinued_treatments,\n    risk_factors\n  } = health && health.health_record ? health.health_record : {}\n\n  return (\n    <div className='Health'>\n      <Header />\n      <Container className='container-height'>\n        <section className='health-section'>\n          <div className='card shadow py-3 px-5 my-3'>\n            <div className='row my-auto'>\n              <div className='col-lg-8 content-box'>\n                <h3 className='heading'>Patient Information</h3>\n                <div className='content-box'>\n                  <div className='d-flex'>\n                    <p className='patient-content mr-1'>Patient name : </p>\n                    <p className='patient-content mr-1'>\n                      {patientInfo && patientInfo.firstname\n                        ? patientInfo.firstname\n                        : ''}\n                    </p>\n                    <p className='patient-content'>\n                      {patientInfo && patientInfo.lastname\n                        ? patientInfo.lastname\n                        : ''}\n                    </p>\n                  </div>\n                  <p className='patient-content'>\n                    Date of birth :{' '}\n                    <span>\n                      {patientInfo && patientInfo.date_of_birth\n                        ? patientInfo.date_of_birth\n                        : ''}\n                    </span>\n                  </p>\n                </div>\n              </div>\n              <div className='col-lg-4'>\n                <div className='content-box right-content-box'>\n                  <p className='patient-content'>\n                    Age :{' '}\n                    <span>\n                      {identification && identification.age\n                        ? identification.age\n                        : ''}\n                    </span>\n                  </p>\n                  <p className='patient-content'>\n                    Sex :{' '}\n                    <span>\n                      {identification && identification.sex\n                        ? identification.sex\n                        : ''}\n                    </span>\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n        <Row>\n          <Col md={6}>\n            <section className='pt-3'>\n              <div className='card shadow py-3 px-5 '>\n                <div className='row'>\n                  <div className='col-lg-8 content-box'>\n                    <h3 className='heading '>Allergy Information</h3>\n                    <div className='content'>\n                      {allergy && allergy.medicinal\n                        ? allergy.medicinal\n                        : 'No Active Medicinal'}\n                    </div>\n                    <div className='content '>\n                      {allergy && allergy.food\n                        ? allergy.food\n                        : 'No Active Food'}\n                    </div>\n                    <div className='content '>\n                      {allergy && allergy.sensitivity\n                        ? allergy.sensitivity\n                        : 'No Active Sensitivity'}\n                    </div>\n                    <div className=''>\n                      {/* <button type='button' className=' btn btn-primary btn-set-3'>\n                  More\n                </button> */}\n                    </div>\n                  </div>\n                  <div className='col-lg-4'>\n                    <div className='imgBox shadow ml-auto my-3  w-100'>\n                      <img src={allergyPic} alt='' className='img-fluid' />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </section>\n          </Col>\n          <Col md={6}>\n            <section className='pt-3'>\n              <div className='card shadow py-3 px-5'>\n                <div className='row'>\n                  <div className='col-lg-4'>\n                    <div className='imgBox shadow my-3 w-100'>\n                      <img src={lifestyle} alt='' className='img-fluid' />\n                    </div>\n                  </div>\n                  <div className='col-lg-8 content-box'>\n                    <h3 className='heading'>Health Treands</h3>\n                    {health_trends && health_trends.length < 200 ? (\n                      <div className='content'>\n                        {health_trends && health_trends\n                          ? health_trends\n                          : 'No Active Health Trends'}\n                      </div>\n                    ) : (\n                      <div>\n                        {Health === false ? (\n                          <div className='content '>\n                            {health_trends\n                              ? health_trends.slice(0, 200)\n                              : 'No Active Health Trends'}\n                          </div>\n                        ) : (\n                          <div className='content'>\n                            {health_trends\n                              ? health_trends\n                              : 'No Active Health Trends'}\n                          </div>\n                        )}\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </section>\n          </Col>\n        </Row>\n\n        <section className='pt-3'>\n          <div className='card shadow py-3 px-5 my-3'>\n            <div className='row'>\n              <div className='col-lg-4'>\n                <div className='imgBox shadow my-3'>\n                  <img\n                    src={treatment}\n                    width='40%'\n                    alt=''\n                    className='img-fluid'\n                  />\n                </div>\n              </div>\n              <div className='col-lg-8 content-box'>\n                <h3 className='heading'>Active and past treatments</h3>\n                <div className='content'>\n                  {active_discontinued_treatments &&\n                  active_discontinued_treatments.active\n                    ? active_discontinued_treatments.active\n                    : 'No Active treatments'}\n                </div>\n                <div className='content '>\n                  {active_discontinued_treatments &&\n                  active_discontinued_treatments.past\n                    ? active_discontinued_treatments.past\n                    : 'No past treatments'}\n                </div>\n                <div className='content '>\n                  {active_discontinued_treatments &&\n                  active_discontinued_treatments.repeat_prescription\n                    ? active_discontinued_treatments.repeat_prescription\n                    : 'No past repeat prescription'}\n                </div>\n                <div className='content '>\n                  {active_discontinued_treatments &&\n                  active_discontinued_treatments.change_of_drug\n                    ? active_discontinued_treatments.change_of_drug\n                    : 'No past drug'}\n                </div>\n                <div className='content '>\n                  {active_discontinued_treatments &&\n                  active_discontinued_treatments.other\n                    ? active_discontinued_treatments.other\n                    : 'No other treatment'}\n                </div>\n                <div className=''>\n                  {/* <button type='button' className=' btn btn-primary btn-set-3'>\n                  More\n                </button> */}\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n\n        <section className='pt-3'>\n          <div className='card shadow py-3 px-5 my-3'>\n            <div className='row'>\n              <div className='col-lg-8 content-box'>\n                <h3 className='heading'>Active and past diseases</h3>\n                <div className='content '>\n                  {healthRecord && healthRecord.active\n                    ? healthRecord.active\n                    : 'No Active imaging'}\n                </div>\n                <div className='content '>\n                  {healthRecord && healthRecord.past\n                    ? healthRecord.past\n                    : 'No past imaging'}\n                </div>\n                <div className='content'>\n                  {healthRecord && healthRecord.event\n                    ? healthRecord.event\n                    : 'No Active event'}\n                </div>\n                <div className='content'>\n                  {healthRecord && healthRecord.deformity\n                    ? healthRecord.deformity\n                    : 'No Active deformity'}\n                </div>\n                <div className=''>\n                  {/* <button type='button' className='btn btn-primary btn-set-3'>\n                  More\n                </button> */}\n                </div>\n              </div>\n              <div className='col-lg-4'>\n                <div className='imgBox shadow ml-auto my-3'>\n                  <img src={disease} alt='' className='img-fluid' />\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n\n        <Row>\n          <Col md={6}>\n            <section className='pt-3'>\n              <div className='card shadow py-3 px-5 '>\n                <div className='row'>\n                  <div className='col-lg-4'>\n                    <div className='imgBox shadow my-3 w-100'>\n                      <img src={family} alt='' className='imf=g-fluid' />\n                    </div>\n                  </div>\n                  <div className='col-lg-8 content-box'>\n                    <h3 className='heading'>Family History</h3>\n                    {risk_factors &&\n                    risk_factors.family_history &&\n                    risk_factors.family_history.length < 250 ? (\n                      <div className='content '>\n                        {risk_factors && risk_factors.family_history\n                          ? risk_factors.family_history\n                          : 'No Active Family History'}\n                      </div>\n                    ) : (\n                      <div>\n                        {isFamilyHistoryMore === false ? (\n                          <div className='content '>\n                            {risk_factors && risk_factors.family_history\n                              ? risk_factors.family_history.slice(0, 2)\n                              : 'No Active Family History'}\n                          </div>\n                        ) : (\n                          <div className='content '>\n                            {risk_factors && risk_factors.family_history\n                              ? risk_factors.family_history\n                              : 'No Active Family History'}\n                          </div>\n                        )}\n\n                        <div className='pt-3'></div>\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </section>\n          </Col>\n          <Col md={6}>\n            <section className='pt-3'>\n              <div className='card shadow py-3 px-5 '>\n                <div className='row'>\n                  <div className='col-lg-8 content-box'>\n                    <h3 className='heading'>Lifestyle</h3>\n                    <div className='content '>\n                      {risk_factors &&\n                      risk_factors.lifestyle &&\n                      risk_factors.lifestyle.length < 200 ? (\n                        <div className='content '>\n                          {risk_factors && risk_factors.lifestyle\n                            ? risk_factors.lifestyle\n                            : 'No Active lifestyle'}\n                        </div>\n                      ) : (\n                        <div>\n                          {Lifestyle === false ? (\n                            <div className='content '>\n                              {risk_factors && risk_factors.lifestyle\n                                ? risk_factors.lifestyle.slice(0, 200)\n                                : 'No Active lifestyle'}\n                            </div>\n                          ) : (\n                            <div className='content '>\n                              {risk_factors && risk_factors.lifestyle\n                                ? risk_factors.lifestyle\n                                : 'No Active lifestyle'}\n                            </div>\n                          )}\n\n                          <div className=''></div>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                  <div className='col-lg-4'>\n                    <div className='imgBox shadow ml-auto my-3 w-100'>\n                      <img src={healthImage} alt='' className='img-fluid' />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </section>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  )\n}\n\nexport default Health\n","import { actionsTypes } from './actionsTypes'\nimport request from './request'\n\n\nexport const getHealth = payload => dispatch => {\n    return new Promise((resolve,reject)=>{\n        request\n          .get(`/patient/${payload.id}`)\n          .then(({ data }) => {\n            console.log(\"success response of login =>\",data);\n            dispatch({\n              type: actionsTypes.GET_HEALTH_SUCCESS,\n              data: JSON.parse(data)\n            })\n            resolve(JSON.parse(data))\n          })\n          .catch(({ response }) => {\n            if(response.status === 300){\n              dispatch({\n                type: actionsTypes.GET_HEALTH_SUCCESS,\n                data: JSON.parse(response.data)\n              })\n              resolve(JSON.parse(response.data))\n            }else{\n              const error = response ?  JSON.parse(response.data) : {message:\"unknown error\"}\n              dispatch({\n                type: actionsTypes.GET_HEALTH_FAILURE,\n                error :  error \n              });\n              reject(error);\n            }\n              \n          });\n      })\n  }","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFilePdf } from '@fortawesome/free-regular-svg-icons';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { ProgressBar } from 'react-bootstrap';\nimport Header from '../../layout/Header/Header';\n\nimport './upload.scss';\n\nconst Upload = () => {\n  return (\n    <div className=\"Upload\">\n      <Header />\n      <main role=\"main\" className=\"container\">\n        <div id=\"FileUpload\">\n          <div className=\"wrapper\">\n            <div className=\"upload\">\n              <p>\n                Drag files here or <span className=\"upload__button\">Browse</span>\n              </p>\n            </div>\n            <div className=\"uploaded uploaded--one\">\n              <FontAwesomeIcon\n                style={{\n                  padding: '15px',\n                  fontSize: '40px',\n                  color: '#0c3214',\n                  width: '60px',\n                  height: '100%',\n                }}\n                icon={faFilePdf}\n              />\n\n              <div className=\"file\">\n                <div className=\"file__name\">\n                  <p>lorem_ipsum.pdf</p>\n                  <FontAwesomeIcon icon={faTimes} />\n                </div>\n                <ProgressBar striped variant=\"success\" animated now={100} key={1} />\n              </div>\n            </div>\n            <div className=\"uploaded uploaded--two\">\n              <FontAwesomeIcon\n                style={{\n                  padding: '15px',\n                  fontSize: '40px',\n                  color: '#0c3214',\n                  width: '60px',\n                  height: '100%',\n                }}\n                icon={faFilePdf}\n              />\n              <div className=\"file\">\n                <div className=\"file__name\">\n                  <p>dolor_sit.pdf</p>\n                  <FontAwesomeIcon icon={faTimes} />\n                </div>\n                <ProgressBar striped variant=\"success\" animated now={35} key={2} />\n              </div>\n            </div>\n            <div className=\"uploaded uploaded--three\">\n              <FontAwesomeIcon\n                style={{\n                  padding: '15px',\n                  fontSize: '40px',\n                  color: '#0c3214',\n                  width: '60px',\n                  height: '100%',\n                }}\n                icon={faFilePdf}\n              />\n              <div className=\"file\">\n                <div className=\"file__name\">\n                  <p>amet_consectetur.pdf</p>\n                  <FontAwesomeIcon icon={faTimes} />\n                </div>\n                <ProgressBar striped variant=\"success\" animated now={60} key={3} />\n              </div>\n            </div>\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default Upload;\n","import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport './enroll-navigation.scss';\n\nconst EnrollNavigation = (props) => {\n\n  const { pathname } = props.location;\n\n  const setNewTab = val =>{\n    props.changeTab(val)\n  }\n\n\n  return (\n    <div className=\"Enroll-navigation\">\n      <ul>\n        <li className=\"first current\">\n          <div disabled={props.currentTabNumber === 1 || props.isEdit ? false : true} onClick={()=>setNewTab('PersonalInfo')}>\n            <span className=\"current-info audible\"> </span>\n            <div className=\"title\">\n              <span className={props.currentTab === 'PersonalInfo' ? 'current-number' : 'step-number'}>1</span>\n              <span className={props.currentTab === 'PersonalInfo' ? 'current-text' : 'step-text'}>\n                Personal info\n              </span>\n            </div>\n          </div>\n        </li>\n        <li className=\"disabled\">\n          <div disabled={props.currentTabNumber >= 2 ? false : true} onClick={()=>setNewTab('BillingInfo')}>\n            <div className=\"title\">\n              <span className={props.currentTab === 'BillingInfo' ? 'current-number' : 'step-number'}>2</span>\n              <span className={props.currentTab === 'BillingInfo' ? 'current-text' : 'step-text'}>\n                Billing Info\n              </span>\n            </div>\n          </div>\n        </li>\n        <li className=\"disabled\">\n          <div disabled={props.currentTabNumber >= 3 ? false : true}  onClick={()=>setNewTab('HealthIdentification')}>\n            <div className=\"title\">\n              <span\n                className={\n                  props.currentTab === 'HealthIdentification' ? 'current-number' : 'step-number'\n                }\n              >\n                3\n              </span>\n              <span\n                className={\n                  props.currentTab === 'HealthIdentification' ? 'current-text' : 'step-text'\n                }\n              >\n                Health ( Identification )\n              </span>\n            </div>\n          </div>\n        </li>\n        <li className=\"disabled\">\n          <div disabled={props.currentTabNumber  >= 4 ? false : true} onClick={()=>setNewTab('HealthAllergy')}>\n            <div className=\"title\">\n              <span\n                className={props.currentTab === 'HealthAllergy' ? 'current-number' : 'step-number'}\n              >\n                4\n              </span>\n              <span className={props.currentTab === 'HealthAllergy' ? 'current-text' : 'step-text'}>\n                Health ( Allergy )\n              </span>\n            </div>\n          </div>\n        </li>\n        <li className=\"disabled\">\n          <div disabled={props.currentTabNumber  >= 5 ? false : true} onClick={()=>setNewTab('HealthDiseases')}>\n            <div className=\"title\">\n              <span\n                className={props.currentTab === 'HealthDiseases' ? 'current-number' : 'step-number'}\n              >\n                5\n              </span>\n              <span\n                className={props.currentTab === 'HealthDiseases' ? 'current-text' : 'step-text'}\n              >\n                Health ( Diseases )\n              </span>\n            </div>\n          </div>\n        </li>\n        <li className=\"disabled\">\n          <div disabled={props.currentTabNumber  >= 6 ? false : true} onClick={()=>setNewTab('HealthTreatments')}>\n            <div className=\"title\">\n              <span\n                className={\n                  props.currentTab === 'HealthTreatments' ? 'current-number' : 'step-number'\n                }\n              >\n                6\n              </span>\n              <span\n                className={props.currentTab === 'HealthTreatments' ? 'current-text' : 'step-text'}\n              >\n                Health ( Treatments )\n              </span>\n            </div>\n          </div>\n        </li>\n        <li className=\"disabled\">\n          <div disabled={props.currentTabNumber  >= 7 ? false : true} onClick={()=>setNewTab('HealthTrends')}>\n            <div className=\"title\">\n              <span\n                className={props.currentTab === 'HealthTrends' ? 'current-number' : 'step-number'}\n              >\n                7\n              </span>\n              <span className={props.currentTab === 'HealthTrends' ? 'current-text' : 'step-text'}>\n                Health ( Trends )\n              </span>\n            </div>\n          </div>\n        </li>\n        <li className=\"disabled\">\n          <div disabled={props.currentTabNumber  >= 8 ? false : true} onClick={()=>setNewTab('HealthRiskFactors')}>\n            <div className=\"title\">\n              <span\n                className={\n                  props.currentTab === 'HealthRiskFactors' ? 'current-number' : 'step-number'\n                }\n              >\n                8\n              </span>\n              <span\n                className={props.currentTab === 'HealthRiskFactors' ? 'current-text' : 'step-text'}\n              >\n                Health ( Risk Factors )\n              </span>\n            </div>\n          </div>\n        </li>\n        <li className=\"disabled\">\n          <div disabled={props.currentTabNumber  >= 9 ? false : true} onClick={()=>setNewTab('HealthImaging')}>\n            <div className=\"title\">\n              <span\n                className={props.currentTab === 'HealthImaging' ? 'current-number' : 'step-number'}\n              >\n                9\n              </span>\n              <span className={props.currentTab === 'HealthImaging' ? 'current-text' : 'step-text'}>\n                Health ( Imaging )\n              </span>\n            </div>\n          </div>\n        </li>\n        <li className=\"disabled last\">\n          <div disabled={props.currentTabNumber  >= 10 ? false : true} onClick={()=>setNewTab('HealthFamilyDoctor')}>\n            <div className=\"title\">\n              <span\n                className={\n                  props.currentTab === 'HealthFamilyDoctor' ? 'current-number' : 'step-number'\n                }\n              >\n                10\n              </span>\n              <span\n                className={props.currentTab === 'HealthFamilyDoctor' ? 'current-text' : 'step-text'}\n              >\n                Health ( Family Doctor )\n              </span>\n            </div>\n          </div>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default withRouter(EnrollNavigation);\n","import { actionsTypes } from './actionsTypes'\nimport request from './request'\n\n\nexport const setPatientPersonalInfo = payload => dispatch => {\n    return new Promise((resolve,reject)=>{\n        request\n          .post('/patient',payload)\n          .then(({ data }) => {\n            dispatch({\n              type: actionsTypes.SET_PATIENT_PERSONAL_INFO_SUCCESS,\n              data: JSON.parse(data)\n            })\n            resolve(JSON.parse(data))\n          })\n          .catch(({ response }) => {\n              const error = response ?  response : {message:\"unknown error\"}\n            dispatch({\n              type: actionsTypes.SET_PATIENT_PERSONAL_INFO_FAILURE,\n              error :  error ? error : {}\n            });\n            reject(response);\n          });\n      })\n  }\n\n  export const setPatientHealthInfo = payload => dispatch => {\n    return new Promise((resolve,reject)=>{\n        request\n          .post(`/patient/${payload.user_info.id}/healthrecord`,payload)\n          .then(({ data }) => {\n            dispatch({\n              type: actionsTypes.SET_PATIENT_HEALTH_INFO_SUCCESS,\n              data: JSON.parse(data)\n            })\n            resolve(JSON.parse(data))\n          })\n          .catch(({ response }) => {\n              const error = response ?  response : {message:\"unknown error\"}\n            dispatch({\n              type: actionsTypes.SET_PATIENT_HEALTH_INFO_FAILURE,\n              error :  error ? error : {}\n            });\n            reject(response);\n          });\n      })\n  }\n\n  export const getPatientHealthInfo = payload => dispatch => {\n    return new Promise((resolve,reject)=>{\n      request\n        .get(`/patient/${payload.id}`)\n        .then(({ data }) => {\n          dispatch({\n            type: actionsTypes.GET_PATIENT_HEALTH_RECORD_SUCCESS,\n            data: JSON.parse(data)\n          })\n          resolve(JSON.parse(data))\n        })\n        .catch(({ response }) => {\n          if(response.status === 300){\n            dispatch({\n              type: actionsTypes.GET_PATIENT_HEALTH_RECORD_SUCCESS,\n              data: JSON.parse(response.data)\n            })\n            resolve(JSON.parse(response.data))\n          }else{\n            const error = response ?  JSON.parse(response.data) : {message:\"unknown error\"}\n            dispatch({\n              type: actionsTypes.GET_PATIENT_HEALTH_RECORD_FAILURE,\n              error :  error \n            });\n            reject(error);\n          } \n        });\n    })\n  }","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Form, Button } from 'react-bootstrap'\nimport { Spin } from 'antd'\nimport { setPatientPersonalInfo } from './../../../../../store/actions/enroll'\nimport { DatePicker } from 'antd';\nimport 'antd/dist/antd.css';\nimport './personalInfo.scss'\nimport moment from 'moment';\nimport Notification from '../../../shared/Notification/Notification';\n\nconst PersonalInfo = props => {\n  const initialState = {\n    firstname: '',\n    lastname: '',\n    mobile: '',\n    address: '',\n    dateofbirth: '',\n    passcode: '',\n    isLoading: false,\n    errorMessage: null,\n    success: false,\n    isEdit:false,\n  }\n\n  const dispatch = useDispatch()\n\n  const [data, setData] = React.useState(initialState)\n\n  const handleInputChange = event => {\n    setData({\n      ...data,\n      [event.target.name]: event.target.value\n    })\n  }\n\n  useSelector(state => {\n    if (state && state.enroll.addPatientInfo.data && data.isLoading) {\n      props.changeCurrentTabNumber(10)\n      props.userInfo(state.enroll.addPatientInfo.data)\n      props.changeTab('BillingInfo')\n      setData({\n        ...data,\n        isLoading: false\n      })\n    }\n    if (state && state.enroll.addPatientInfo.error && data.isLoading) {\n      Notification('error','Error!', state.enroll.addPatientInfo.error ? state.enroll.addPatientInfo.error.message:'');\n      setData({\n        ...data,\n        isLoading: false\n      })\n    }\n  })\n\n  useEffect(() => {\n    setData({\n      ...data,\n      firstname: props.user_info && props.user_info.firstname ? props.user_info.firstname : '',\n      lastname: props.user_info && props.user_info.lastname ? props.user_info.lastname : '',\n      mobile: props.user_info && props.user_info.mobile ? props.user_info.mobile : '',\n      address: props.user_info && props.user_info.address ? props.user_info.address : '',\n      dateofbirth: props.user_info && props.user_info.date_of_birth ? new Date(props.user_info.date_of_birth) : '',\n      isEdit : props.user_info ? true : false\n    })\n  }, [props])\n\n  const [validated, setValidated] = useState(false)\n\n  const handleSubmit = event => {\n    event.preventDefault()\n    const form = event.currentTarget\n    if (form.checkValidity() === false) {\n      event.preventDefault()\n      event.stopPropagation()\n    }\n    setValidated(true)\n    if (data.firstname && data.lastname && data.mobile && data.address && data.dateofbirth) {\n      dispatch(\n        setPatientPersonalInfo({\n          firstname: data.firstname,\n          lastname: data.lastname,\n          mobile: data.mobile,\n          address: data.address,\n          dateofbirth: data.dateofbirth\n        })\n      )\n\n      setData({\n        ...data,\n        isLoading: true\n      })\n    }\n  }\n\n  const onChange = (date, dateString) => {\n    setData({\n      ...data,\n      dateofbirth: dateString,\n    });\n  };\n\n  return (\n    <div className='personal-info'>\n      <fieldset>\n        <h2>Personal Information</h2>\n        <p className='desc'>\n          Please enter your infomation and proceed to next step so we can build\n          your account\n        </p>\n        <Form noValidate validated={validated} onSubmit={handleSubmit}>\n          <div className='fieldset-content'>\n            <div className='Form-row'>\n              <Form.Label>First Name</Form.Label>\n              <Form.Group >\n                <Form.Control\n                  type='text'\n                  required\n                  onChange={handleInputChange}\n                  name='firstname'\n                  value={data.firstname}\n                  disabled={data.isEdit}\n\n\n                />\n                <Form.Control.Feedback type='invalid'>\n                  Fist Name is requried.\n                </Form.Control.Feedback>\n              </Form.Group>\n              <Form.Label>Last Name</Form.Label>\n              <Form.Group >\n                <Form.Control\n                  required\n                  type='text'\n                  name='lastname'\n                  value={data.lastname}\n                  onChange={handleInputChange}\n                  disabled={data.isEdit}\n\n                />\n                <Form.Control.Feedback type='invalid'>\n                  Last Name is requried.\n                </Form.Control.Feedback>\n              </Form.Group>\n            </div>\n            <Form.Group >\n              <Form.Label htmlFor='mobile'>Mobile</Form.Label>\n              <Form.Control\n                required\n                type='text'\n                name='mobile'\n                value={data.mobile}\n                onChange={handleInputChange}\n                disabled={data.isEdit}\n              />\n              <Form.Control.Feedback type='invalid'>\n                Mobile number is requried.\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group >\n              <Form.Label htmlFor='mobile'>Address</Form.Label>\n              <Form.Control\n                required\n                as=\"textarea\"\n                rows=\"3\"\n                name='address'\n                value={data.address}\n                onChange={handleInputChange}\n                disabled={data.isEdit}\n\n              />\n              <Form.Control.Feedback type='invalid'>\n                Address is requried.\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group >\n              <Form.Label htmlFor='mobile'>Date Of Birth</Form.Label>\n              <DatePicker\n                value={data.dateofbirth ? moment(data.dateofbirth, 'YYYY-MM-DD') : ''}\n                onChange={onChange}\n                className={validated && !data.dateofbirth ? ' invalid-date-picker' : 'date-picker'}\n                disabled={data.isEdit}\n              />\n              {\n                validated && !data.dateofbirth ?\n                  <div>\n                    <p className=\"invalid-date\">Date is required</p>\n                  </div>\n                  :\n                  <div></div>\n              }\n            </Form.Group>\n          </div>\n          <div className='navigation-btn'>\n            <Button>Previous</Button>\n            <Spin spinning={data.isLoading}>\n              <Button type=\"submit\">\n                Next\n              </Button>\n            </Spin>\n          </div>\n        </Form>\n      </fieldset>\n    </div>\n  )\n}\n\nexport default PersonalInfo\n","import React, { useState, useEffect } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport '../../enroll.scss';\n\nconst BillingInfo = (props) => {\n  const initialState = {\n    payment_method: '',\n    payment_status: '',\n    isLoading: false,\n    errorMessage: null,\n    success: false,\n  };\n\n  useEffect(() => {\n    setData({\n      ...data,\n      payment_method: props.setBillingInfo ? props.setBillingInfo.payment_method : '',\n      payment_status: props.setBillingInfo ? props.setBillingInfo.payment_status : '',\n    });\n  }, [props]);\n\n  const [data, setData] = useState(initialState);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    props.billingInformation({\n      payment_method: data.payment_method,\n      payment_status: data.payment_status,\n    });\n  };\n\n  const handleOnChange = (event, name) => {\n    setData({\n      ...data,\n      [name]: event.target.value,\n    });\n  };\n\n  return (\n    <div className=\"billing\">\n      <fieldset>\n        <h2>Billing Information</h2>\n        <p className=\"desc\">Please enter your infomation and proceed to next step</p>\n        <div className=\"fieldset-content\">\n          <div className=\"Form-group\">\n            <Form.Label htmlFor=\"mobile\">Payment Method</Form.Label>\n            <div className=\"Form-holder\">\n              <select\n                style={{\n                  fontFamily: 'inherit', fontSize: '1rem',\n                  fontWeight: '400'\n                }}\n                className=\"browser-default custom-select\"\n                value={data.payment_method}\n                onChange={(e) => {\n                  handleOnChange(e, 'payment_method');\n                }}\n              >\n                <option selected disabled value=\"\">\n                  select your payment method\n                </option>\n                <option value=\"cash\">Cash</option>\n                <option value=\"card\">Card</option>\n                <option value=\"bkash\">Bkash</option>\n              </select>\n\n              <i className=\"fas fa-sort-down\"></i>\n            </div>\n          </div>\n          <div className=\"Form-group\">\n            <Form.Label htmlFor=\"mobile\">Payment Status</Form.Label>\n            <div className=\"Form-holder\">\n              <select\n                style={{\n                  fontFamily: 'inherit', fontSize: '1rem',\n                  fontWeight: '400'\n                }}\n                className=\"browser-default custom-select\"\n                value={data.payment_status}\n                onChange={(e) => {\n                  handleOnChange(e, 'payment_status');\n                }}\n              >\n                <option selected disabled value=\"\">\n                  select your payment status\n                </option>\n                <option value=\"paid\">Paid</option>\n                <option value=\"pending\">Pending</option>\n              </select>\n              <i className=\"fas fa-sort-down\"></i>\n            </div>\n          </div>\n          <div className=\"navigation-btn\">\n            <Button onClick={handleSubmit}>Next</Button>\n          </div>\n        </div>\n      </fieldset>\n    </div>\n  );\n};\n\nexport default BillingInfo;\n","import React, { useState, useEffect } from 'react';\nimport { DatePicker } from 'antd';\nimport 'antd/dist/antd.css';\nimport moment from 'moment';\n\n\nimport { Form, DropdownButton, Button } from 'react-bootstrap';\n\nconst HealthIdentification = (props) => {\n  const initialState = {\n    age: '',\n    sex: '',\n    isLoading: false,\n    errorMessage: null,\n    success: false,\n  };\n\n  const [data, setData] = useState(initialState);\n\n  useEffect(() => {\n    // debugger\n    setData({\n      ...data,\n      age: props.setHealthIdentificationInformation\n        ? props.setHealthIdentificationInformation.age\n        : '',\n      sex: props.setHealthIdentificationInformation\n        ? props.setHealthIdentificationInformation.sex\n        : '',\n    });\n  }, []);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    props.healthIdentificationInformation({\n      age: data.age,\n      sex: data.sex,\n    });\n  };\n\n  const handleOnChange = (event, name) => {\n    setData({\n      ...data,\n      [name]: event.target.value,\n    });\n  };\n\n  const goBackPage = (val) => {\n    props.goBack();\n  };\n\n\n  const handleInputChange = event => {\n    setData({\n      ...data,\n      [event.target.name]: event.target.value\n    })\n  }\n\n  return (\n    <div className=\"healthIdentification\">\n      <fieldset>\n        <h2> Health Record(Identification) </h2> <p className=\"desc\"> About you </p>\n        <div className=\"fieldset-content\">\n          <div className=\"Form-date\">\n            <Form.Label htmlFor=\"birth_date\" className=\"Form-Form.Label\">\n              Age\n            </Form.Label>\n            <Form.Control\n              type='text'\n              name='age'\n              value={data.age}\n              onChange={handleInputChange}\n            />\n            {/* <div className=\"Form-date-group\">\n              <div className=\"Form-date-item\">\n                <DatePicker\n                  value={data.date ? moment(data.date, 'YYYY-MM-  ') : ''}\n                  onChange={onChange}\n                  className=\"w-100 date-picker\"\n                />\n              </div>\n            </div> */}\n          </div>\n          <div className=\"Form-group\">\n            <Form.Label htmlFor=\"mobile\" className=\"Form-Form.Label\">\n              Sex\n            </Form.Label>\n            <div className=\"Form-holder\">\n              <select\n                style={{\n                  fontFamily: 'inherit', fontSize: '1rem',\n                  fontWeight: '400'\n                }}\n                className=\"browser-default custom-select\"\n                value={data.sex}\n                onChange={(e) => {\n                  handleOnChange(e, 'sex');\n                }}\n              >\n                <option disabled selected value=\"\">\n                  Select gender\n                </option>\n                <option value=\"male\">Male</option>\n                <option value=\"female\">Female</option>\n              </select>\n              <i className=\"zmdi zmdi-caret-down\"> </i>\n            </div>\n          </div>\n          <div className=\"navigation-btn\">\n            <Button onClick={goBackPage}>Previous</Button>\n            <Button onClick={handleSubmit}>Next</Button>\n          </div>\n        </div>\n      </fieldset>\n    </div>\n  );\n};\n\nexport default HealthIdentification;\n","import React, { useState, useEffect } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { useSelector, useDispatch } from 'react-redux';\n\nconst HealthAllergy = (props) => {\n  const initialState = {\n    food: '',\n    medicinal: '',\n    sensitivity: '',\n    isLoading: false,\n    errorMessage: null,\n    success: false,\n  };\n\n  useEffect(() => {\n    setData({\n      ...data,\n      food: props.setHealthAllergyInformation ? props.setHealthAllergyInformation.food : '',\n      medicinal: props.setHealthAllergyInformation\n        ? props.setHealthAllergyInformation.medicinal\n        : '',\n      sensitivity: props.setHealthAllergyInformation\n        ? props.setHealthAllergyInformation.sensitivity\n        : '',\n    });\n  }, [props]);\n\n  // const dispatch = useDispatch()\n\n  const [data, setData] = React.useState(initialState);\n\n  const handleInputChange = (event) => {\n    setData({\n      ...data,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  const [validated, setValidated] = useState(false);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n    setValidated(true);\n    props.healthAllergyInformation({\n      food: data.food,\n      medicinal: data.medicinal,\n      sensitivity: data.sensitivity,\n    });\n  };\n\n  const goBackPage = (val) => {\n    props.goBack();\n  };\n\n  return (\n    <div className=\"healthAllergy\">\n      <fieldset>\n        <h2> Health Record(allergy) </h2> <p className=\"desc\"> Tell us about your allergy </p>\n        <Form noValidate validated={validated} onSubmit={handleSubmit}>\n          <div className=\"fieldset-content\">\n            <Form.Group>\n              <Form.Label htmlFor=\"food\">Food</Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                required\n                onChange={handleInputChange}\n                name=\"food\"\n                value={data.food}\n                rows=\"4\"\n                placeholder=\"Note about your food allergy\"\n              />\n            </Form.Group>\n            <Form.Group>\n              <Form.Label htmlFor=\"med\">Medicinal</Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                required\n                onChange={handleInputChange}\n                name=\"medicinal\"\n                value={data.medicinal}\n                rows=\"4\"\n                placeholder=\"Note about your food allergy\"\n              />\n            </Form.Group>\n            <Form.Group>\n              <Form.Label htmlFor=\"ssn\">Sensitivity</Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                rows=\"4\"\n                required\n                onChange={handleInputChange}\n                name=\"sensitivity\"\n                value={data.sensitivity}\n                placeholder=\"Note about your food allergy\"\n              />\n            </Form.Group>\n          </div>\n          <div className=\"navigation-btn\">\n            <Button onClick={goBackPage}>Previous</Button>\n            <Button type=\"submit\">Next</Button>\n          </div>\n        </Form>\n      </fieldset>\n    </div>\n  );\n};\n\nexport default HealthAllergy;\n","import React, { useState, useEffect } from 'react';\nimport { Form, Button } from 'react-bootstrap';\n\nconst HealthDiseases = (props) => {\n  const initialState = {\n    active: '',\n    past: '',\n    event: '',\n    deformity: '',\n    isLoading: false,\n    errorMessage: null,\n    success: false,\n  };\n\n  useEffect(() => {\n    setData({\n      ...data,\n      active: props.setHealthDiseasesInformation ? props.setHealthDiseasesInformation.active : '',\n      past: props.setHealthDiseasesInformation ? props.setHealthDiseasesInformation.past : '',\n      event: props.setHealthDiseasesInformation ? props.setHealthDiseasesInformation.event : '',\n      deformity: props.setHealthDiseasesInformation\n        ? props.setHealthDiseasesInformation.deformity\n        : '',\n    });\n  }, [props]);\n\n  // const dispatch = useDispatch()\n\n  const [data, setData] = React.useState(initialState);\n\n  const handleInputChange = (event) => {\n    setData({\n      ...data,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  const [validated, setValidated] = useState(false);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n    setValidated(true);\n    props.healthDiseasesInformation({\n      active: data.active,\n      past: data.past,\n      event: data.event,\n      deformity: data.deformity,\n    });\n  };\n\n  const goBackPage = (val) => {\n    props.goBack();\n  };\n\n  return (\n    <div className=\"disease\">\n      <fieldset>\n        <h2> Health Record(Active and Past Diseases) </h2>\n        <p className=\"desc\"> Do you have any active or past disease ? </p>\n        <Form noValidate validated={validated} onSubmit={handleSubmit}>\n          <div className=\"fieldset-content\">\n            <Form.Group>\n              <Form.Label htmlFor=\"active\">Active</Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                required\n                onChange={handleInputChange}\n                name=\"active\"\n                value={data.active}\n                rows=\"4\"\n                placeholder=\"Note about your Active disease eg.\"\n              />\n              <Form.Control.Feedback type=\"invalid\">Active is requried.</Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label htmlFor=\"med\">Past</Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                rows=\"4\"\n                required\n                onChange={handleInputChange}\n                name=\"past\"\n                value={data.past}\n                placeholder=\"Note about Past disease eg.\"\n              />\n              <Form.Control.Feedback type=\"invalid\">Past is requried.</Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label htmlFor=\"ssn\">Events</Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                required\n                onChange={handleInputChange}\n                name=\"event\"\n                value={data.event}\n                rows=\"4\"\n                placeholder=\"Note about your Events eg.\"\n              />\n              <Form.Control.Feedback type=\"invalid\">Events is requried.</Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label htmlFor=\"ssn\">DeFormity</Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                required\n                onChange={handleInputChange}\n                name=\"deformity\"\n                value={data.deformity}\n                rows=\"4\"\n                placeholder=\"Note about your Deformity eg.\"\n              />\n              <Form.Control.Feedback type=\"invalid\">DeFormity is requried.</Form.Control.Feedback>\n            </Form.Group>\n          </div>\n          <div className=\"navigation-btn\">\n            <Button onClick={goBackPage}>Previous</Button>\n            <Button type=\"submit\">Next</Button>\n          </div>\n        </Form>\n      </fieldset>\n    </div>\n  );\n};\n\nexport default HealthDiseases;\n","import React, { useState, useEffect } from 'react'\nimport { Form, Button } from 'react-bootstrap'\n\nconst HealthTreatments = props => {\n  const initialState = {\n    active: '',\n    past: '',\n    repeat_prescription: '',\n    change_of_drug: '',\n    other: '',\n    isLoading: false,\n    errorMessage: null,\n    success: false\n  }\n\n  useEffect(() => {\n    setData({\n      ...data,\n      active: props.setHealthTreatmentsInformation ? props.setHealthTreatmentsInformation.active : '',\n      past: props.setHealthTreatmentsInformation ? props.setHealthTreatmentsInformation.past : '',\n      repeat_prescription: props.setHealthTreatmentsInformation ? props.setHealthTreatmentsInformation.repeat_prescription : '',\n      change_of_drug: props.setHealthTreatmentsInformation ? props.setHealthTreatmentsInformation.change_of_drug : '',\n      other: props.setHealthTreatmentsInformation ? props.setHealthTreatmentsInformation.other : ''\n    })\n  }, [props])\n\n  const [data, setData] = React.useState(initialState)\n\n  const handleInputChange = event => {\n    setData({\n      ...data,\n      [event.target.name]: event.target.value\n    })\n  }\n\n  const [validated, setValidated] = useState(false)\n\n  const handleSubmit = event => {\n    event.preventDefault()\n    const form = event.currentTarget\n    if (form.checkValidity() === false) {\n      event.preventDefault()\n      event.stopPropagation()\n    }\n    setValidated(true)\n    props.healthTreatmentsInformation({\n      active: data.active,\n      past: data.past,\n      repeat_prescription: data.repeat_prescription,\n      change_of_drug: data.change_of_drug,\n      other: data.other\n    })\n  }\n\n  const goBackPage = val => {\n    props.goBack()\n  }\n\n  return (\n    <div className=\"healthTreatment\">\n      <fieldset>\n        <h2>Health Record ( Active and Discontinued Treatments )</h2>\n        <p className='desc'>Tell us about your active or past treatments</p>\n        <Form noValidate validated={validated} onSubmit={handleSubmit}>\n          <div className='fieldset-content'>\n            <Form.Group>\n              <Form.Label htmlFor='active'>Active</Form.Label>\n              <Form.Control\n                as='textarea'\n                required\n                onChange={handleInputChange}\n                name='active'\n                value={data.active}\n                rows='4'\n                placeholder='Note about your Active treatment eg.'\n              />\n            </Form.Group>\n            <Form.Group>\n              <Form.Label htmlFor='med'>Past</Form.Label>\n              <Form.Control\n                as='textarea'\n                required\n                onChange={handleInputChange}\n                name='past'\n                value={data.past}\n                rows='4'\n                placeholder='Note about Past treatment eg.'\n              />\n            </Form.Group>\n            <Form.Group>\n              <Form.Label htmlFor='ssn'>Repeat prescription</Form.Label>\n              <Form.Control\n                as='textarea'\n                required\n                onChange={handleInputChange}\n                name='repeat_prescription'\n                value={data.repeat_prescription}\n                rows='4'\n                placeholder='Note about your Repeat prescription eg.'\n              />\n            </Form.Group>\n            <Form.Group>\n              <Form.Label htmlFor='ssn'>Recent Change of Drugs</Form.Label>\n              <Form.Control\n                as='textarea'\n                required\n                onChange={handleInputChange}\n                name='change_of_drug'\n                value={data.change_of_drug}\n                rows='4'\n                placeholder='Note about your Recent Change of Drugs eg.'\n              />\n            </Form.Group>\n            <Form.Group>\n              <Form.Label htmlFor='ssn'>Other</Form.Label>\n              <Form.Control\n                as='textarea'\n                required\n                onChange={handleInputChange}\n                name='other'\n                value={data.other}\n                rows='4'\n                placeholder='Note about your Other health conditions eg.'\n              />\n            </Form.Group>\n          </div>\n          <div className='navigation-btn'>\n            <Button onClick={goBackPage}>Previous</Button>\n            <Button type='submit'>Next</Button>\n          </div>\n        </Form>\n      </fieldset>\n    </div>\n  )\n}\n\nexport default HealthTreatments\n","import React, { useState, useEffect } from 'react'\nimport { Form, Button } from 'react-bootstrap'\n\nconst HealthTrends = props => {\n  const initialState = {\n    health_trends: '',\n    isLoading: false,\n    errorMessage: null,\n    success: false\n  }\n\n  useEffect(() => {\n    setData({\n      ...data,\n      health_trends: props.setHealthTrendsInformation ? props.setHealthTrendsInformation.health_trends : ''\n    })\n  }, [props])\n\n  const [data, setData] = React.useState(initialState)\n\n  const handleInputChange = event => {\n    setData({\n      ...data,\n      [event.target.name]: event.target.value\n    })\n  }\n\n  const [validated, setValidated] = useState(false)\n\n  const handleSubmit = event => {\n    event.preventDefault()\n    const form = event.currentTarget\n    if (form.checkValidity() === false) {\n      event.preventDefault()\n      event.stopPropagation()\n    }\n    setValidated(true)\n    props.healthTrendsInformation({\n      health_trends: data.health_trends,\n    })\n  }\n\n  const goBackPage = val => {\n    props.goBack()\n  }\n\n  return (\n    <div className=\"healthTrends\">\n      <fieldset>\n        <h2>Health Record ( Health Trends )</h2>\n        <p className=\"desc\">Do you have any habbits and change of health</p>\n        <Form noValidate validated={validated} onSubmit={handleSubmit}>\n          <Form.Group>\n            <Form.Label htmlFor=\"active\">Trends</Form.Label>\n            <Form.Control\n              as=\"textarea\"\n              required\n              onChange={handleInputChange}\n              name='health_trends'\n              value={data.health_trends}\n              rows=\"4\"\n              placeholder=\"Note about your habbits and change of health eg.\"\n            />\n          </Form.Group>\n          <div className='navigation-btn'>\n            <Button onClick={goBackPage}>Previous</Button>\n            <Button type='submit'>Next</Button>\n          </div>\n        </Form>\n      </fieldset>\n    </div>\n  );\n};\n\nexport default HealthTrends;\n","import React, { useState, useEffect } from 'react'\nimport { Form, Button } from 'react-bootstrap'\n\nconst HealthRiskFactors = props => {\n  const initialState = {\n    family_history: '',\n    lifestyle: '',\n    isLoading: false,\n    errorMessage: null,\n    success: false\n  }\n\n  useEffect(() => {\n    setData({\n      ...data,\n      family_history: props.setHealthRiskFactorsInformation ? props.setHealthRiskFactorsInformation.family_history : '',\n      lifestyle: props.setHealthRiskFactorsInformation ? props.setHealthRiskFactorsInformation.lifestyle : ''\n    })\n  }, [props])\n\n  const [data, setData] = React.useState(initialState)\n\n  const handleInputChange = event => {\n    setData({\n      ...data,\n      [event.target.name]: event.target.value\n    })\n  }\n\n  const [validated, setValidated] = useState(false)\n\n  const handleSubmit = event => {\n    event.preventDefault()\n    const form = event.currentTarget\n    if (form.checkValidity() === false) {\n      event.preventDefault()\n      event.stopPropagation()\n    }\n    setValidated(true)\n    props.healthRiskFactorsInformation({\n      family_history: data.family_history,\n      lifestyle: data.lifestyle\n    })\n  }\n\n  const goBackPage = val => {\n    props.goBack()\n  }\n\n  return (\n    <div className=\"healthRisk\">\n      <fieldset>\n        <h2>Health Record ( Risk Factors )</h2>\n        <p className='desc'>Set up your money limit to reach the future plan</p>\n        <Form noValidate validated={validated} onSubmit={handleSubmit}>\n          <div className='fieldset-content'>\n            <div className='form-group'>\n              <Form.Label htmlFor='food'>Family history</Form.Label>\n              <Form.Control\n                as='textarea'\n                required\n                onChange={handleInputChange}\n                name='family_history'\n                value={data.family_history}\n                rows='4'\n                placeholder='Note about your Family history eg.'\n              />\n            </div>\n            <div className='form-group'>\n              <Form.Label htmlFor='med'>Lifestyle</Form.Label>\n              <Form.Control\n                as='textarea'\n                required\n                onChange={handleInputChange}\n                name='lifestyle'\n                value={data.lifestyle}\n                rows='4'\n                placeholder='Note about your Lifestyle eg.'\n              />\n            </div>\n          </div>\n          <div className='navigation-btn'>\n            <Button onClick={goBackPage}>Previous</Button>\n            <Button type='submit'>Next</Button>\n          </div>\n        </Form>\n      </fieldset>\n    </div>\n  )\n}\n\nexport default HealthRiskFactors\n","import React, { useState, useEffect } from 'react'\nimport { Form, Button } from 'react-bootstrap'\n\n\nconst HealthImaging = (props) => {\n  const initialState = {\n    imaging: '',\n    isLoading: false,\n    errorMessage: null,\n    success: false\n  }\n\n\n  useEffect(() => {\n    setData({\n      ...data,\n      imaging: props.setHealthImagingInformation ? props.setHealthImagingInformation.imaging : ''\n    })\n  }, [props])\n\n  const [data, setData] = React.useState(initialState)\n\n  const handleInputChange = event => {\n    setData({\n      ...data,\n      [event.target.name]: event.target.value\n    })\n  }\n\n  const [validated, setValidated] = useState(false)\n\n  const handleSubmit = event => {\n    event.preventDefault()\n    const form = event.currentTarget\n    if (form.checkValidity() === false) {\n      event.preventDefault()\n      event.stopPropagation()\n    }\n    setValidated(true)\n    props.healthImagingInformation({\n      imaging: data.imaging,\n\n    })\n  }\n\n  const goBackPage = val => {\n    props.goBack()\n  }\n\n  return (\n    <div className=\"healthimaging\">\n      <fieldset>\n        <h2>Health Record ( Imaging )</h2>\n        <p className=\"desc\">Imaging inFormation</p>\n        <Form noValidate validated={validated} onSubmit={handleSubmit}>\n          <Form.Group>\n            <Form.Label htmlFor=\"med\">Imaging</Form.Label>\n            <Form.Control\n              as=\"textarea\"\n              required\n              onChange={handleInputChange}\n              name='imaging'\n              value={data.imaging}\n              rows=\"4\"\n              placeholder=\"Note about your Imaging inFormation eg.\"\n            />\n          </Form.Group>\n          <div className='navigation-btn'>\n            <Button onClick={goBackPage}>Previous</Button>\n            <Button type='submit'>Next</Button>\n          </div>\n        </Form>\n      </fieldset>\n    </div>\n  );\n};\n\nexport default HealthImaging;\n","import React, { useState, useEffect } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { Spin } from 'antd';\n\nconst HealthFamilyDoctor = (props) => {\n  const initialState = {\n    family_doctor: '',\n    isLoading: false,\n    errorMessage: null,\n    success: false,\n  };\n\n  useEffect(() => {\n    setData({\n      ...data,\n      family_doctor: props.setFamilyDoctorInformation\n        ? props.setFamilyDoctorInformation.family_doctor\n        : '',\n      isLoading: props.loader,\n    });\n  }, [props]);\n\n  const [data, setData] = React.useState(initialState);\n\n  const handleInputChange = (event) => {\n    setData({\n      ...data,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  const [validated, setValidated] = useState(false);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n    setValidated(true);\n    props.familyDoctorInformation({\n      family_doctor: data.family_doctor,\n    });\n  };\n\n  const goBackPage = (val) => {\n    props.goBack();\n  };\n\n  return (\n    <div className=\"familyDoc\">\n      <fieldset>\n        <h2>Health Record ( Family Doctor )</h2>\n        <p className=\"desc\">Who is your Family Doctor</p>\n        <Form noValidate validated={validated} onSubmit={handleSubmit}>\n          <Form.Group>\n            <Form.Label htmlFor=\"med\">Family Doctor</Form.Label>\n            <Form.Control\n              as=\"textarea\"\n              required\n              onChange={handleInputChange}\n              name=\"family_doctor\"\n              value={data.family_doctor}\n              rows=\"4\"\n              placeholder=\"Note about your Family Doctor eg..\"\n            />\n          </Form.Group>\n          <div className=\"navigation-btn\">\n            <Button onClick={props.goBack}>Previous</Button>\n            <Spin spinning={data.isLoading}>\n              <Button type=\"submit\">Submit</Button>\n            </Spin>\n          </div>\n        </Form>\n      </fieldset>\n    </div>\n  );\n};\n\nexport default HealthFamilyDoctor;\n","import React, { useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport './enroll.scss'\nimport EnrollNavigation from './Enroll-navigation/EnrollNavigation'\nimport PersonalInfo from './Enroll-components/PersonalInfo/PersonalInfo'\nimport BillingInfo from './Enroll-components/BillingInfo/BillingInfo'\nimport HealthIdentification from './Enroll-components/HealthIdentification/HealthIdentification'\nimport HealthAllergy from './Enroll-components/HealthAllergy/HealthAllergy'\nimport HealthDiseases from './Enroll-components/HealthDiseases/HealthDiseases'\nimport HealthTreatments from './Enroll-components/HealthTreatments/HealthTreatments'\nimport HealthTrends from './Enroll-components/HealthTrends/HealthTrends'\nimport HealthRiskFactors from './Enroll-components/HealthRiskFactors/HealthRiskFactors'\nimport HealthImaging from './Enroll-components/HealthImaging/HealthImaging'\nimport HealthFamilyDoctor from './Enroll-components/HealthFamilyDoctor/HealthFamilyDoctor'\nimport Header from '../../layout/Header/Header'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setPatientHealthInfo } from './../../../store/actions/enroll'\nimport Notification from './../shared/Notification/Notification'\n\nconst Enroll = () => {\n  const initialState = {\n    patientHealthInfo: {},\n    isLoading: false,\n    errorMessage: null,\n    success: false,\n    isSubmit: false\n  }\n\n  const [data, setData] = useState(initialState)\n  const history = useHistory()\n  const [currentTab, setCurrentTab] = useState('PersonalInfo')\n  const [currentTabNumber, setCurrentTabNumber] = useState(1)\n  const dispatch = useDispatch()\n\n  const setTabNumber = val => {\n    setCurrentTabNumber(val)\n  }\n\n  const setTab = val => {\n    setCurrentTab(val)\n  }\n\n  const billingInformation = val => {\n    let temp = data.patientHealthInfo;\n    temp['billing'] = val;\n    setData({\n      ...data,\n      patientHealthInfo: temp\n    })\n    setTabNumber(3)\n    setCurrentTab('HealthIdentification')\n  }\n\n  const HealthIdentificationInformation = val => {\n    let temp = data.patientHealthInfo\n    temp['identification'] = val\n    setData({\n      ...data,\n      patientHealthInfo: temp\n    })\n    setTabNumber(4)\n    setCurrentTab('HealthAllergy')\n  }\n\n  const HealthAllergyInformation = val => {\n    let temp = data.patientHealthInfo\n    temp['allergy'] = val\n    setData({\n      ...data,\n      patientHealthInfo: temp\n    })\n    setTabNumber(5)\n    setCurrentTab('HealthDiseases')\n  }\n\n  const HealthDiseasesInformation = val => {\n    let temp = data.patientHealthInfo\n    temp['active_past_diseases'] = val ? val : {}\n    setData({\n      ...data,\n      patientHealthInfo: temp\n    })\n    setTabNumber(6)\n    setCurrentTab('HealthTreatments')\n  }\n  const HealthTreatmentsInformation = val => {\n    let temp = data.patientHealthInfo\n    temp['active_discontinued_treatments'] = val ? val : {}\n    setData({\n      ...data,\n      patientHealthInfo: temp\n    })\n    setTabNumber(7)\n    setCurrentTab('HealthTrends')\n  }\n\n  const HealthTrendsInformation = val => {\n    let temp = data.patientHealthInfo\n    temp['health_trends'] = val ? val.health_trends : {}\n    setData({\n      ...data,\n      patientHealthInfo: temp\n    })\n    setTabNumber(8)\n    setCurrentTab('HealthRiskFactors')\n  }\n\n  const HealthRiskFactorsInformation = val => {\n    let temp = data.patientHealthInfo\n    temp['risk_factors'] = val ? val : {}\n    setData({\n      ...data,\n      patientHealthInfo: temp\n    })\n    setTabNumber(9)\n    setCurrentTab('HealthImaging')\n  }\n\n  const HealthImagingInformation = val => {\n    let temp = data.patientHealthInfo\n    temp['imaging'] = val ? val.imaging : {}\n    setData({\n      ...data,\n      patientHealthInfo: temp\n    })\n    setTabNumber(10)\n    setCurrentTab('HealthFamilyDoctor')\n  }\n\n  const FamilyDoctorInformation = val => {\n    let temp = data.patientHealthInfo\n    temp['family_doctor'] = val ? val.family_doctor : {}\n    setData({\n      ...data,\n      patientHealthInfo: temp,\n      isLoading: true,\n      isSubmit: true\n    })\n    dispatch(setPatientHealthInfo(data.patientHealthInfo))\n  }\n\n  const goPreviousPage = (tabNumber, tabName) => {\n    setTabNumber(tabNumber)\n    setCurrentTab(tabName)\n  }\n\n  const setUserInfo = val => {\n    let temp = data.patientHealthInfo\n    temp['user_info'] = val ? val : {}\n    setData({\n      ...data,\n      patientHealthInfo: temp\n    })\n  }\n\n  useSelector(state => {\n    if (state && state.enroll.addPatientHealthInfo.data && data.isSubmit) {\n      history.push(`/patient`)\n    }\n\n    if (\n      state &&\n      state.enroll.addPatientHealthInfo.error &&\n      this.data.isLoading\n    ) {\n      Notification(\n        'error',\n        'Error!',\n         state.enroll.addPatientHealthInfo.error ? state.enroll.addPatientHealthInfo.error.message :'')\n      setData({\n        ...data,\n        isLoading: false\n      })\n    }\n  })\n\n  return (\n    <div className='main'>\n      <Header />\n      <div className=\"container-fluid\">\n        <Row>\n          <Col md={4} className=\"enroll-left\">\n            <EnrollNavigation\n              changeTab={setTab}\n              currentTabNumber={currentTabNumber}\n              isEdit={data.isEdit}\n              currentTab={currentTab}\n            />\n          </Col>\n          <Col md={8} className=\"enroll-right\">\n            {(() => {\n              switch (currentTab) {\n                case 'PersonalInfo':\n                  return (\n                    <PersonalInfo\n                      changeTab={setTab}\n                      userInfo={setUserInfo}\n                      changeCurrentTabNumber={setTabNumber}\n                    />\n                  )\n                case 'BillingInfo':\n                  return (\n                    <BillingInfo\n                      billingInformation={billingInformation}\n                      setBillingInfo={\n                        data.patientHealthInfo &&\n                          data.patientHealthInfo.billing\n                          ? data.patientHealthInfo.billing\n                          : {}\n                      }\n                    />\n                  )\n                case 'HealthIdentification':\n                  return (\n                    <HealthIdentification\n                      healthIdentificationInformation={\n                        HealthIdentificationInformation\n                      }\n                      setHealthIdentificationInformation={\n                        data.patientHealthInfo &&\n                          data.patientHealthInfo.identification\n                          ? data.patientHealthInfo.identification\n                          : {}\n                      }\n                      goBack={() =>\n                        goPreviousPage(currentTabNumber - 1, 'BillingInfo')\n                      }\n                    />\n                  )\n                case 'HealthAllergy':\n                  return (\n                    <HealthAllergy\n                      healthAllergyInformation={HealthAllergyInformation}\n                      setHealthAllergyInformation={\n                        data.patientHealthInfo && data.patientHealthInfo.allergy\n                          ? data.patientHealthInfo.allergy\n                          : {}\n                      }\n                      goBack={() =>\n                        goPreviousPage(\n                          currentTabNumber - 1,\n                          'HealthIdentification'\n                        )\n                      }\n                    />\n                  )\n                case 'HealthDiseases':\n                  return (\n                    <HealthDiseases\n                      healthDiseasesInformation={HealthDiseasesInformation}\n                      setHealthDiseasesInformation={\n                        data.patientHealthInfo &&\n                          data.patientHealthInfo.active_past_diseases\n                          ? data.patientHealthInfo.active_past_diseases\n                          : {}\n                      }\n                      goBack={() =>\n                        goPreviousPage(currentTabNumber - 1, 'HealthAllergy')\n                      }\n                    />\n                  )\n                case 'HealthTreatments':\n                  return (\n                    <HealthTreatments\n                      healthTreatmentsInformation={HealthTreatmentsInformation}\n                      setHealthTreatmentsInformation={\n                        data.patientHealthInfo &&\n                          data.patientHealthInfo.active_discontinued_treatments\n                          ? data.patientHealthInfo\n                            .active_discontinued_treatments\n                          : {}\n                      }\n                      goBack={() =>\n                        goPreviousPage(currentTabNumber - 1, 'HealthDiseases')\n                      }\n                    />\n                  )\n                case 'HealthTrends':\n                  return (\n                    <HealthTrends\n                      healthTrendsInformation={HealthTrendsInformation}\n                      setHealthTrendsInformation={\n                        data.patientHealthInfo &&\n                          data.patientHealthInfo\n                          ? data.patientHealthInfo\n                          : {}\n                      }\n                      goBack={() =>\n                        goPreviousPage(currentTabNumber - 1, 'HealthTreatments')\n                      }\n                    />\n                  )\n                case 'HealthRiskFactors':\n                  return (\n                    <HealthRiskFactors\n                      healthRiskFactorsInformation={\n                        HealthRiskFactorsInformation\n                      }\n                      setHealthRiskFactorsInformation={\n                        data.patientHealthInfo &&\n                          data.patientHealthInfo.risk_factors\n                          ? data.patientHealthInfo.risk_factors\n                          : {}\n                      }\n                      goBack={() =>\n                        goPreviousPage(currentTabNumber - 1, 'HealthTrends')\n                      }\n                    />\n                  )\n                case 'HealthImaging':\n                  return (\n                    <HealthImaging\n                      healthImagingInformation={HealthImagingInformation}\n                      setHealthImagingInformation={\n                        data.patientHealthInfo && data.patientHealthInfo\n                          ? data.patientHealthInfo\n                          : {}\n                      }\n                      goBack={() =>\n                        goPreviousPage(\n                          currentTabNumber - 1,\n                          'HealthRiskFactors'\n                        )\n                      }\n                    />\n                  )\n                case 'HealthFamilyDoctor':\n                  return (\n                    <HealthFamilyDoctor\n                      familyDoctorInformation={FamilyDoctorInformation}\n                      setFamilyDoctorInformation={\n                        data.patientHealthInfo &&\n                          data.patientHealthInfo\n                          ? data.patientHealthInfo\n                          : {}\n                      }\n                      loader={data.isLoading}\n                      goBack={() =>\n                        goPreviousPage(currentTabNumber - 1, 'HealthImaging')\n                      }\n                    />\n                  )\n                default:\n                  return <PersonalInfo />\n              }\n            })()}\n            {/* </div> */}\n\n            {/* </Form> */}\n          </Col>\n        </Row>\n      </div>\n    </div>\n  )\n}\n\nexport default Enroll\n","import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { Form } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit, faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { Table } from 'antd';\nimport { getPatients } from './../../../store/actions/patient';\nimport { Link } from 'react-router-dom';\nimport { faExclamationTriangle } from '@fortawesome/free-solid-svg-icons';\nimport Notification from '../shared/Notification/Notification'\n\nimport Header from '../../layout/Header/Header';\nimport './paitent.scss';\n\nconst columns = [\n  {\n    title: 'First Name',\n    dataIndex: 'firstname',\n    key: 'firstname',\n    sorter: {\n      compare: (a, b) => a.firstname.length - b.firstname.length,\n    },\n  },\n  {\n    title: 'Last Name',\n    dataIndex: 'lastname',\n    key: 'lastname',\n    sorter: {\n      compare: (a, b) => a.lastname.length - b.lastname.length,\n    },\n  },\n  {\n    title: 'Date of birth',\n    dataIndex: 'dateofbirth',\n    key: 'dateofbirth',\n    sorter: {\n      compare: (a, b) => new Date(a.dateofbirth) - new Date(b.dateofbirth),\n    },\n  },\n  {\n    title: 'Phone',\n    dataIndex: 'phone',\n    key: 'phone',\n  },\n\n  {\n    title: 'Actions',\n    dataIndex: 'actions',\n    key: 'actions',\n  },\n  {\n    title: 'Medical History',\n    dataIndex: 'medicalAction',\n    key: 'medicalActions'\n  }\n];\n\n\nexport const Patient = () => {\n  const [val, setVal] = useState('');\n  const [filterdata, setFilterdata] = useState();\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getPatients());\n  }, []);\n\n   useSelector((state) => {\n    if (\n      state &&\n      state.patient.patients.error !== null &&\n      state.patient.patients.error !== undefined\n    ) {\n      Notification(\n        'error',\n        'Error!',\n        state.patient.patients.error.message ? state.patient.patients.error.message : ''\n      )\n      // return state.patient.patients.error;\n    }\n  });\n\n  const patientsData = useSelector(state => {\n    if (state && state.patient && state.patient.patients.data) {\n      let array = state.patient.patients.data;\n      array.forEach((val, i) => {\n        array[i]['countId'] = i + 1\n      })\n      return array\n    }\n  })\n\n  const SearchFilter = (e) => {\n    setVal(e.target.value)\n    let value = e.target.value.toLowerCase()\n    if (value) {\n      let filterdHistory = paitents && paitents.filter(val => { \n        if( val.firstname.props.children.toLowerCase().indexOf(value) !== -1 || val.lastname.toLowerCase().indexOf(value) !== -1 ) return val\n        });\n      setFilterdata(filterdHistory)\n    } else {\n      setFilterdata(paitents)\n    }\n  }\n\n  const paitents = useSelector((state) => {\n    if (state && state.patient && state.patient.patients.data) {\n      let dataSource = []\n      let array = state.patient.patients.data ? state.patient.patients.data : [];\n      if (array.length) {\n        array.map((val, i) => {\n          let obj = {\n            key: i + 1,\n            firstname: (<Link to={`/health/${val.id}`}>{val.firstname}</Link>),\n            lastname: val.lastname,\n            dateofbirth: val.date_of_birth,\n            phone: val.mobile,\n            actions: (\n              <div className=\"table-action-btn\">\n                <Link to={`/update-patient/${val.id}`}><FontAwesomeIcon icon={faEdit} /></Link>\n                <div> <FontAwesomeIcon icon={faTrash} /></div>\n              </div>\n            ),\n            medicalAction: (\n              <div>\n                <Link to={`/history/${val.id}`}>View</Link> |\n              <Link to={`/addPatientHistory/${val.id}`}> Add New</Link>\n              </div>\n            )\n          }\n          dataSource.push(obj)\n        })\n      }\n      return dataSource\n    }\n  });\n\n  const data = filterdata ? filterdata : paitents;\n\n\n  return (\n    <div className=\"Patient\">\n      <Header />\n      <div className=\"container container-height\">\n        {/* {patientError ? (\n          <div className=\"alert alert-warning input100 alert-dismissible  show\">\n            <h4 className=\"alert-heading\">\n              <FontAwesomeIcon icon={faExclamationTriangle} /> Warning!{' '}\n            </h4>\n            <p style={{ marginBottom: '0px' }}>\n              {patientError ? patientError.message : 'matching records found'}\n            </p>\n            <button type=\"button\" className=\"close pdg-set-2\" data-dismiss=\"alert\">\n              &times;\n            </button>\n          </div>\n        ) : (\n            <div></div>\n          )} */}\n        <div className=\"pt-5\">\n          <div className=\"input\">\n            <Form.Control value={val} onChange={SearchFilter} type=\"text\" placeholder=\"Search patient name\" />\n          </div>\n          <Table\n            columns={columns}\n            dataSource={data ? data : []}\n            size=\"middle\" />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Patient;\n","import { actionsTypes } from './actionsTypes'\nimport request from './request'\n\n\nexport const getPatients = payload => dispatch => {\n    return new Promise((resolve,reject)=>{\n        request\n          .get(`/patient`)\n          .then(({ data }) => {\n            // localStorage.setItem('PAU',data);\n            dispatch({\n              type: actionsTypes.GET_PATIENTS_SUCCESS,\n              data: data ? JSON.parse(data) : {}\n            })\n            resolve(data ? JSON.parse(data) : {})\n          })\n          .catch(({ response }) => {\n            // if(response){\n            const error = response ?  JSON.parse(response.data) : {message:'unknown error occured'}\n            dispatch({\n              type: actionsTypes.GET_PATIENTS_FAILURE,\n              error :  error\n            });\n            reject(error);\n        // }\n          });\n      })\n  }\n\n\n\n// export const getPatientHealtRecord = payload => dispatch => {\n//     return new Promise((resolve,reject)=>{\n//         request\n//           .post(`/patient`,payload)\n//           .then(({ data }) => {\n//             localStorage.setItem('PAU',data);\n//             dispatch({\n//               type: actionsTypes.GET_PATIENT_HEALTH_RECORD_SUCCESS,\n//               data: data\n//             })\n//             resolve(data)\n//           })\n//           .catch(({ response }) => {\n//             const error = JSON.parse(response.data)\n//             dispatch({\n//               type: actionsTypes.GET_PATIENT_HEALTH_RECORD_FAILURE,\n//               error :  error ? error : {}\n//             });\n//             reject(response);\n//           });\n//       })\n//   }","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Form, Container, Row, Col, Button } from 'react-bootstrap'\nimport Header from '../../layout/Header/Header'\nimport { useHistory, useParams } from 'react-router-dom'\nimport './editPatientHistory.scss'\nimport {\n  uploadPatientHistory, addPatientHistory\n} from './../../../store/actions/history'\nimport Notification from '../shared/Notification/Notification'\nimport 'antd/dist/antd.css';\nimport Validation from '../Validtae/Validation'\n\nconst EditPatientHistory = props => {\n  const initialState = {\n    type: '',\n    report: '',\n    file: null,\n    documentId: '',\n    isFileUploading: false,\n    isLoading: false,\n    errorMessage: null,\n    previousPath: '',\n    isEditPatient: false,\n    validated: false\n  }\n\n  const history = useHistory()\n\n  const dispatch = useDispatch()\n\n  let { editPatientId } = useParams();\n\n  let { patientId } = useParams();\n\n\n  const [state, setState] = React.useState(initialState)\n\n  const handleInputChange = event => {\n    setState({\n      ...state,\n      [event.target.name]: event.target.value\n    })\n  }\n\n  useSelector(stateValue => {\n    let patientHistory = JSON.parse(localStorage.getItem('patientHistory'));\n\n    if (patientHistory && editPatientId && !state.isEditPatient) {\n      let obj = { name: patientHistory.filepath }\n      setState({\n        ...state,\n        isEditPatient: true,\n        type: patientHistory.type,\n        report: patientHistory.report,\n        file: obj\n      })\n    }\n\n    if (stateValue && stateValue.history.uploadHistory.data && state.isLoading) {\n      setState(initialState)\n      history.goBack()\n    }\n\n    if (stateValue && stateValue.history.addHistory.data && state.isLoading) {\n      setState(initialState)\n      history.goBack()\n    }\n\n    if (\n      stateValue &&\n      stateValue.history.uploadHistory.error &&\n      state.isLoading\n    ) {\n      \n      Notification(\n        'error',\n        'Error!',\n        stateValue.history.uploadHistory.error ? stateValue.history.uploadHistory.error.message : '' \n      )\n      setState({\n        ...state,\n        isLoading: false\n      })\n    }\n\n    if (stateValue && stateValue.history.addHistory.error && state.isLoading) {\n      setState({\n        ...state,\n        isLoading: false\n      })\n      Notification(\n        'error',\n        'Error!',\n        stateValue.history.addHistory && stateValue.history.addHistory.error ? stateValue.history.addHistory.error.message : 'Error ocured'\n      )\n    }\n  })\n\n\n  const handleFileChnage = event => {\n    setState({\n      ...state,\n      file: event.target.files[0]\n    })\n  }\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (!state.isFileUploading && state.type && state.report && state.file) {\n      setState({\n        ...state,\n        isLoading: true,\n      })\n      if (editPatientId && state.isEditPatient) {\n        updatePatientHistory();\n      } else {\n        addNewPatientHistory();\n      }\n    } else {\n      setState({\n        ...state,\n        validated: true\n      })\n    }\n  }\n\n  const addNewPatientHistory = () => {\n    var formData = new FormData();\n    formData.append('file', state.file);\n    formData.append('type', state.type);\n    formData.append('report', state.report);\n    formData.append('id', JSON.parse(localStorage.getItem('PAU')).id)\n    dispatch(addPatientHistory(formData,patientId));\n  }\n\n  const updatePatientHistory = () => {\n    var formData = new FormData();\n    formData.append('file', state.file);\n    formData.append('type', state.type);\n    formData.append('document_id', editPatientId);\n    formData.append('report', state.report);\n    formData.append('id', JSON.parse(localStorage.getItem('PAU')).id)\n    dispatch(uploadPatientHistory(formData,patientId,editPatientId));\n    localStorage.removeItem('patientHistory');\n  }\n\n  const guid = () => {\n    let s4 = () => {\n      return Math.floor((1 + Math.random()) * 0x10000)\n        .toString(16)\n        .substring(1)\n    }\n    return (\n      s4() +\n      s4() +\n      '-' +\n      s4() +\n      '-' +\n      s4() +\n      '-' +\n      s4() +\n      '-' +\n      s4() +\n      s4() +\n      s4()\n    )\n  }\n\n  return (\n    <React.Fragment>\n      <Header />\n      <div className='editPatientHistory'>\n        <Container className=\"container-height\">\n          <Row>\n            <Col md={10} className='mx-auto'>\n\n              <Form noValidate validated={state.validated} onSubmit={handleSubmit}>\n                <h2>Patient History</h2>\n                <div className='fieldset-content'>\n                  <Form.Group controlId=\"type\">\n                    <Form.Label>Type</Form.Label>\n                    <Form.Control\n                      required\n                      type='text'\n                      name='type'\n                      onChange={handleInputChange}\n                      value={state.type}\n                    />\n                    <Validation errMsg=\"Type filed is empty\" />\n                  </Form.Group>\n\n                  <Form.Group controlId=\"report\">\n                    <Form.Label>Remarks</Form.Label>\n                    <Form.Control\n                      required\n                      as='textarea'\n                      rows='4'\n                      name='report'\n                      onChange={handleInputChange}\n                      value={state.report}\n                    />\n                    <Validation errMsg=\"Remarks filed is empty\" />\n                  </Form.Group>\n                  <Form.Group controlId=\"file\">\n                    <Form.Label>File</Form.Label>\n                    <Form.File\n                      required\n                      id=\"custom-file\"\n                      name=\"file\"\n                      label={state.file ? state.file.name : ''}\n                      onChange={handleFileChnage}\n                      custom\n                    />\n                    <Validation errMsg=\"File is empty\" />\n                  </Form.Group>\n                </div>\n                <Button type='submit'>Submit</Button>\n              </Form>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    </React.Fragment>\n  )\n}\n\nexport default EditPatientHistory\n","import React, { useEffect, useState } from 'react'\nimport { useHistory, useParams } from 'react-router-dom'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport './Edit-enroll.scss'\nimport EnrollNavigation from '../Enroll-navigation/EnrollNavigation'\nimport PersonalInfo from '../Enroll-components/PersonalInfo/PersonalInfo'\nimport BillingInfo from '../Enroll-components/BillingInfo/BillingInfo'\nimport HealthIdentification from '../Enroll-components/HealthIdentification/HealthIdentification'\nimport HealthAllergy from '../Enroll-components/HealthAllergy/HealthAllergy'\nimport HealthDiseases from '../Enroll-components/HealthDiseases/HealthDiseases'\nimport HealthTreatments from '../Enroll-components/HealthTreatments/HealthTreatments'\nimport HealthTrends from '../Enroll-components/HealthTrends/HealthTrends'\nimport HealthRiskFactors from '../Enroll-components/HealthRiskFactors/HealthRiskFactors'\nimport HealthImaging from '../Enroll-components/HealthImaging/HealthImaging'\nimport HealthFamilyDoctor from '../Enroll-components/HealthFamilyDoctor/HealthFamilyDoctor'\nimport Header from '../../../layout/Header/Header'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { getPatientHealthInfo, setPatientHealthInfo } from '../../../../store/actions/enroll'\n\nconst EditEnroll = () => {\n  const initialState = {\n    patientHealthInfo: {},\n    isLoading: false,\n    errorMessage: null,\n    isEdit: false,\n    isSubmit: false,\n    isPatientHistoryLoading:false\n  }\n\n  let { editEnrollId } = useParams()\n\n  useEffect(() => {\n    dispatch(getPatientHealthInfo({ id: editEnrollId }));\n    setData({\n      ...data,\n      isPatientHistoryLoading: true\n    })\n  }, [])\n\n\n\n  const [data, setData] = useState(initialState)\n  const history = useHistory()\n  const [currentTab, setCurrentTab] = useState('PersonalInfo')\n  const [currentTabNumber, setCurrentTabNumber] = useState(10)\n  const dispatch = useDispatch()\n\n  const setTabNumber = val => {\n    setCurrentTabNumber(val)\n  }\n\n  const setTab = val => {\n    setCurrentTab(val)\n  }\n\n  const billingInformation = val => {\n    let temp = data.patientHealthInfo;\n    temp['billing'] = val;\n    setData({\n      ...data,\n      patientHealthInfo: temp\n    })\n    setCurrentTab('HealthIdentification')\n  }\n\n  const HealthIdentificationInformation = val => {\n    let temp = data.patientHealthInfo\n    temp['identification'] = val\n    setData({\n      ...data,\n      patientHealthInfo: temp\n    })\n    setCurrentTab('HealthAllergy')\n  }\n\n  const HealthAllergyInformation = val => {\n    let temp = data.patientHealthInfo\n    temp['allergy'] = val\n    setData({\n      ...data,\n      patientHealthInfo: temp\n    })\n    setCurrentTab('HealthDiseases')\n  }\n\n  const HealthDiseasesInformation = val => {\n    let temp = data.patientHealthInfo\n    temp['active_past_diseases'] = val ? val : {}\n    setData({\n      ...data,\n      patientHealthInfo: temp\n    })\n    setCurrentTab('HealthTreatments')\n  }\n  const HealthTreatmentsInformation = val => {\n    let temp = data.patientHealthInfo\n    temp['active_discontinued_treatments'] = val ? val : {}\n    setData({\n      ...data,\n      patientHealthInfo: temp\n    })\n    setCurrentTab('HealthTrends')\n  }\n\n  const HealthTrendsInformation = val => {\n    let temp = data.patientHealthInfo\n    temp['health_trends'] = val ? val.health_trends : {}\n    setData({\n      ...data,\n      patientHealthInfo: temp\n    })\n    setCurrentTab('HealthRiskFactors')\n  }\n\n  const HealthRiskFactorsInformation = val => {\n    let temp = data.patientHealthInfo\n    temp['risk_factors'] = val ? val : {}\n    setData({\n      ...data,\n      patientHealthInfo: temp\n    })\n    setCurrentTab('HealthImaging')\n  }\n\n  const HealthImagingInformation = val => {\n    let temp = data.patientHealthInfo\n    temp['imaging'] = val ? val.imaging : {}\n    setData({\n      ...data,\n      patientHealthInfo: temp\n    })\n    setCurrentTab('HealthFamilyDoctor')\n  }\n\n  const FamilyDoctorInformation = val => {\n    let temp = data.patientHealthInfo\n    temp['family_doctor'] = val ? val.family_doctor : {}\n    setData({\n      ...data,\n      patientHealthInfo: temp,\n      isLoading: true,\n      isSubmit: true\n    })\n    dispatch(setPatientHealthInfo(data.patientHealthInfo))\n  }\n\n  const goPreviousPage = (tabNumber, tabName) => {\n    setTabNumber(tabNumber)\n    setCurrentTab(tabName)\n  }\n\n  useSelector(state => {\n    if (state && state.enroll.getPatientHealthInfo.data && !data.isEdit) {\n      let temp = state.enroll.getPatientHealthInfo.data.health_record;\n      temp['user_info'] = state.enroll.getPatientHealthInfo.data.user_info;\n      temp['billing'] = state.enroll.getPatientHealthInfo.data.billing;\n      temp['identification'] = state.enroll.getPatientHealthInfo.data.identification;\n      setData({\n        ...data,\n        isEdit: true,\n        patientHealthInfo: temp\n      })\n    }\n\n    if (state && state.enroll.addPatientHealthInfo.data && data.isSubmit) {\n      history.push(`/patient`)\n    }\n\n    if (\n      state &&\n      state.enroll.addPatientHealthInfo.error &&\n      data.isLoading\n    ) {\n      if(state.enroll.addPatientHealthInfo.error && state.enroll.addPatientHealthInfo.error.message) Notification('error', 'Error', state.enroll.addPatientHealthInfo.error.message )\n      setData({\n        ...data,\n        isLoading: false,\n      })\n    }\n\n    if(state && state.enroll.getPatientHealthInfo.error && data.isPatientHistoryLoading ){\n      if(state.enroll.addPatientHealthInfo.error && state.enroll.addPatientHealthInfo.error.message) Notification('error', 'Error',state.enroll.getPatientHealthInfo.error.message )\n      \n      setData({\n        ...data,\n        isPatientHistoryLoading: false,\n      })\n    }\n\n  })\n\n  const setUserInfo = val => {\n    let temp = data.patientHealthInfo\n    temp['user_info'] = val ? val : {}\n    setData({\n      ...data,\n      patientHealthInfo: temp\n    })\n  }\n\n  return (\n    <div className='main'>\n      <Header />\n      <div className=\"container-fluid\">\n        <Row>\n          <Col md={4} className=\"enroll-left\">\n            <EnrollNavigation\n              changeTab={setTab}\n              currentTabNumber={currentTabNumber}\n              isEdit={data.isEdit}\n              currentTab={currentTab}\n            />\n          </Col>\n          <Col md={8} className=\"enroll-right\">\n            {(() => {\n              switch (currentTab) {\n                case 'PersonalInfo':\n                  return (\n                    <PersonalInfo\n                      changeTab={setTab}\n                      user_info={\n                        data.patientHealthInfo &&\n                          data.patientHealthInfo.user_info\n                          ? data.patientHealthInfo.user_info\n                          : {}\n                      }\n                      userInfo={setUserInfo}\n                      changeCurrentTabNumber={setTabNumber}\n                    />\n                  )\n                case 'BillingInfo':\n                  return (\n                    <BillingInfo\n                      billingInformation={billingInformation}\n                      setBillingInfo={\n                        data.patientHealthInfo &&\n                          data.patientHealthInfo.billing\n                          ? data.patientHealthInfo.billing\n                          : {}\n                      }\n                    />\n                  )\n                case 'HealthIdentification':\n                  return (\n                    <HealthIdentification\n                      healthIdentificationInformation={\n                        HealthIdentificationInformation\n                      }\n                      setHealthIdentificationInformation={\n                        data.patientHealthInfo &&\n                          data.patientHealthInfo.identification\n                          ? data.patientHealthInfo.identification\n                          : {}\n                      }\n                      goBack={() =>\n                        goPreviousPage(currentTabNumber - 1, 'BillingInfo')\n                      }\n                    />\n                  )\n                case 'HealthAllergy':\n                  return (\n                    <HealthAllergy\n                      healthAllergyInformation={HealthAllergyInformation}\n                      setHealthAllergyInformation={\n                        data.patientHealthInfo && data.patientHealthInfo.allergy\n                          ? data.patientHealthInfo.allergy\n                          : {}\n                      }\n                      goBack={() =>\n                        goPreviousPage(\n                          currentTabNumber - 1,\n                          'HealthIdentification'\n                        )\n                      }\n                    />\n                  )\n                case 'HealthDiseases':\n                  return (\n                    <HealthDiseases\n                      healthDiseasesInformation={HealthDiseasesInformation}\n                      setHealthDiseasesInformation={\n                        data.patientHealthInfo &&\n                          data.patientHealthInfo.active_past_diseases\n                          ? data.patientHealthInfo.active_past_diseases\n                          : {}\n                      }\n                      goBack={() =>\n                        goPreviousPage(currentTabNumber - 1, 'HealthAllergy')\n                      }\n                    />\n                  )\n                case 'HealthTreatments':\n                  return (\n                    <HealthTreatments\n                      healthTreatmentsInformation={HealthTreatmentsInformation}\n                      setHealthTreatmentsInformation={\n                        data.patientHealthInfo &&\n                          data.patientHealthInfo.active_discontinued_treatments\n                          ? data.patientHealthInfo\n                            .active_discontinued_treatments\n                          : {}\n                      }\n                      goBack={() =>\n                        goPreviousPage(currentTabNumber - 1, 'HealthDiseases')\n                      }\n                    />\n                  )\n                case 'HealthTrends':\n                  return (\n                    <HealthTrends\n                      healthTrendsInformation={HealthTrendsInformation}\n                      setHealthTrendsInformation={\n                        data.patientHealthInfo &&\n                          data.patientHealthInfo\n                          ? data.patientHealthInfo\n                          : {}\n                      }\n                      goBack={() =>\n                        goPreviousPage(currentTabNumber - 1, 'HealthTreatments')\n                      }\n                    />\n                  )\n                case 'HealthRiskFactors':\n                  return (\n                    <HealthRiskFactors\n                      healthRiskFactorsInformation={\n                        HealthRiskFactorsInformation\n                      }\n                      setHealthRiskFactorsInformation={\n                        data.patientHealthInfo &&\n                          data.patientHealthInfo.risk_factors\n                          ? data.patientHealthInfo.risk_factors\n                          : {}\n                      }\n                      goBack={() =>\n                        goPreviousPage(currentTabNumber - 1, 'HealthTrends')\n                      }\n                    />\n                  )\n                case 'HealthImaging':\n                  return (\n                    <HealthImaging\n                      healthImagingInformation={HealthImagingInformation}\n                      setHealthImagingInformation={\n                        data.patientHealthInfo && data.patientHealthInfo\n                          ? data.patientHealthInfo\n                          : {}\n                      }\n                      goBack={() =>\n                        goPreviousPage(\n                          currentTabNumber - 1,\n                          'HealthRiskFactors'\n                        )\n                      }\n                    />\n                  )\n                case 'HealthFamilyDoctor':\n                  return (\n                    <HealthFamilyDoctor\n                      familyDoctorInformation={FamilyDoctorInformation}\n                      setFamilyDoctorInformation={\n                        data.patientHealthInfo &&\n                          data.patientHealthInfo\n                          ? data.patientHealthInfo\n                          : {}\n                      }\n                      loader={data.isLoading}\n                      goBack={() =>\n                        goPreviousPage(currentTabNumber - 1, 'HealthImaging')\n                      }\n                    />\n                  )\n                default:\n                  return <PersonalInfo />\n              }\n            })()}\n          </Col>\n        </Row>\n      </div>\n    </div>\n  )\n}\n\nexport default EditEnroll\n","import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Container, Form, Button } from 'react-bootstrap'\nimport Header from '../../layout/Header/Header'\nimport './profile.scss'\nimport { getUserProfile, updateCurrentUserProfile } from './../../../store/actions/user';\nimport Notification from '../shared/Notification/Notification';\nimport Validation from '../Validtae/Validation'\n\nexport const Profile = () => {\n\n  const initialState = {\n    firstname: '',\n    lastname: '',\n    mobile: '',\n    address: '',\n    isProfileLoading: false,\n    isUpdating: false,\n    validated: false\n  }\n\n  const [data, setData] = React.useState(initialState);\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getUserProfile(JSON.parse(localStorage.getItem('PAU'))));\n    setData({\n      ...data,\n      isProfileLoading: true\n    })\n  }, []);\n\n  useSelector(state => {\n    if (state && state.user.currentUser.data && data.isProfileLoading) {\n      setData({\n        ...data,\n        firstname: state.user.currentUser.data.firstname,\n        lastname: state.user.currentUser.data.lastname,\n        mobile: state.user.currentUser.data.mobile,\n        address: state.user.currentUser.data.address,\n        isProfileLoading: false\n      })\n    }\n\n    if (state && state.user.currentUser.error && data.isProfileLoading) {\n      Notification(\n        'error',\n      'Error!',\n       state.user.currentUser.error ?state.user.currentUser.error.message :'');\n      setData({\n        ...data,\n        isProfileLoading: false\n      })\n    }\n\n    if (state && state.user.currentUser.data && data.isUpdating) {\n      Notification(\n        'success',\n      'Success!',\n        'Profile Update Successfully');\n      setData({\n        ...data,\n        isUpdating: false\n      })\n    }\n\n    if (state && state.user.currentUser.error && data.isUpdating) {\n      Notification(\n        'error',\n      'Error!',\n       state.user.currentUser.error ? state.user.currentUser.error.message : '');\n      setData({\n        ...data,\n        isUpdating: false\n      })\n    }\n  })\n\n  const handleInputChange = (event) => {\n    setData({\n      ...data,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    if (data.firstname && data.lastname && data.mobile && data.address) {\n      setData({\n        ...data,\n        isUpdating: true,\n        validated: false\n      });\n      dispatch(updateCurrentUserProfile({ firstname: data.firstname, lastname: data.lastname, mobile: data.mobile, address: data.address, id: JSON.parse(localStorage.getItem('PAU')).id }));\n    } else {\n      setData({\n        ...data,\n        validated: true\n      });\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <Header />\n      <div className=\"profile\">\n        <Container className=\"container-height\">\n          <Form noValidate validated={data.validated} onSubmit={handleSubmit}>\n            <div className='Form-row'>\n\n              <Form.Group >\n                <Form.Label>First Name</Form.Label>\n                <Form.Control\n                  type='text'\n                  required\n                  name='firstname'\n                  onChange={handleInputChange}\n                  value={data.firstname}\n                />\n                <Validation errMsg=\"Fist Name is requried.\" />\n              </Form.Group>\n\n              <Form.Group>\n                <Form.Label>Last Name</Form.Label>\n                <Form.Control\n                  required\n                  type='text'\n                  name='lastname'\n                  onChange={handleInputChange}\n                  value={data.lastname}\n                />\n                <Validation errMsg=\"Last Name is requried.\" />\n              </Form.Group>\n            </div>\n            <Form.Group >\n              <Form.Label>Phone number</Form.Label>\n              <Form.Control\n                type='text'\n                required\n                name='mobile'\n                onChange={handleInputChange}\n                value={data.mobile}\n              />\n              <Validation errMsg=\"Phone number is requried.\" />\n            </Form.Group>\n            <Form.Group >\n              <Form.Label>Address</Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                rows=\"3\"\n                required\n                name='address'\n                onChange={handleInputChange}\n                value={data.address}\n              />\n              <Validation errMsg=\"Address is requried.\" />\n            </Form.Group>\n            <div className=\"save-btn\">\n              <Button type=\"submit\">Save</Button>\n            </div>\n          </Form>\n        </Container>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Profile;\n","import { actionsTypes } from './actionsTypes'\nimport request from './request'\n\nexport const getUserProfile = payload => dispatch => {\n  return new Promise((resolve, reject) => {\n    request\n      .get(`/doctor/${payload.id}`)\n      .then(({ data }) => {\n        dispatch({\n          type: actionsTypes.GET_DOCTOR_PROFILE_SUCCESS,\n          data: data ? JSON.parse(data) : {}\n        })\n        resolve(data)\n      })\n      .catch(({ response }) => {\n        const error = response ? JSON.parse(response.data) : { message: 'unknown error' }\n        dispatch({\n          type: actionsTypes.GET_DOCTOR_PROFILE_FAILURE,\n          error: error\n        })\n        reject(error)\n      })\n  })\n}\n\nexport const updateCurrentUserProfile = payload => dispatch => {\n  return new Promise((resolve, reject) => {\n    request\n      .post(`/doctor/${payload.id}`)\n      .then(({ data }) => {\n        dispatch({\n          type: actionsTypes.UPDATE_DOCTOR_PROFILE_SUCCESS,\n          data: data ? JSON.parse(data) : {}\n        })\n        resolve(data)\n      })\n      .catch(({ response }) => {\n        const error = response ? JSON.parse(response.data) : { message: 'unknown error' }\n        dispatch({\n          type: actionsTypes.UPDATE_DOCTOR_PROFILE_FAILURE,\n          error: error\n        })\n        reject(error)\n      })\n  })\n}\n","const Auth = {\n  getAuth () {\n    return !!localStorage.getItem('PAU')\n  }\n}\n\nexport default Auth\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport Login from './pages/components/Login/Login';\nimport SignUp from './pages/components/SignUp/SignUp';\nimport History from './pages/components/History/History';\nimport Health from './pages/components/Health/Health';\nimport Upload from './pages/components/Upload/Upload';\nimport Enroll from './pages/components/Enroll/Enroll';\nimport Patient from './pages/components/Patient/Patient';\nimport EditPatientHistory from './pages/components/EditPatientHistory/EditPatientHistory';\nimport EditEnroll from './pages/components/Enroll/Edit-enroll/Edit-enroll'\nimport Profile from './pages/components/Profile/Profile'\nimport Auth from './auth';\n\nconst Router = (props) => (\n  <Switch>\n    <Route exact path=\"/\">\n      <Redirect to=\"/patient\" />\n    </Route>\n\n    <Route exact path=\"/login\" component={Login} />\n    <Route path=\"/signup\" component={SignUp} />\n    <Route path=\"/upload\" component={Upload} />\n    <Route exact path=\"/patient\" component={Patient} />\n    <Route path=\"/editPatientHistory/:patientId/:editPatientId\" component={EditPatientHistory} />\n    <PrivateRoute path=\"/addPatientHistory/:patientId\" component={EditPatientHistory} />\n    <PrivateRoute path=\"/history/:historyId\" component={History} />\n    <PrivateRoute path=\"/health/:id\" component={Health} />\n    <PrivateRoute path=\"/profile\" component={Profile} />\n    <PrivateRoute path=\"/enroll\" component={Enroll} />\n    {/* <PrivateRoute path=\"/editPatientHistory/:patientId\" component={EditPatientHistory} /> */}\n    <PrivateRoute path=\"/update-patient/:editEnrollId\" component={EditEnroll} />\n  </Switch>\n);\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={(props) =>\n      Auth.getAuth() ? (\n        <Component {...props} />\n      ) : (\n          <Redirect\n            to={{\n              pathname: '/login',\n            }}\n          />\n        )\n    }\n  />\n);\n\nexport default Router;\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n// import './assets/util.css';\n// import './assets/style.css';\n// import './assets/style3.css';\n// import './assets/style4.css';\n// import './assets/main.css';\n\n// import Header from './pages/layout/Header/Header'\nimport Header from './pages/layout/Header/Header';\nimport Footer from './pages/layout/Footer/Footer';\nimport Router from './Router';\n\n// import { BrowserRouter } from 'react-router-dom'\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      {/* <Header /> */}\n      <Router />\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { actionsTypes } from './../actions/actionsTypes'\n\nconst initData = {\n  login: {\n    success: false,\n    data: null,\n    error: null\n  },\n  signup: {\n    success: false,\n    data: null,\n    error: null\n  }\n}\n\nexport default function (state = initData, action) {\n  switch (action.type) {\n    case actionsTypes.LOGIN:\n      return {\n        ...state,\n        login: {\n          success: false,\n          data: {},\n          error: null\n        }\n      }\n    case actionsTypes.LOGIN_SUCCESS:\n      return {\n        ...state,\n        login: {\n            success: true,\n            data: action.data,\n            error: null\n          }\n      }\n    case actionsTypes.LOGIN_FAILURE:\n      return {\n        ...state,\n        login: {\n            success: false,\n            data: null,\n            error: action.error\n          }\n      }\n    case actionsTypes.SIGNUP_SUCCESS:\n      return {\n        ...state,\n        signup: {\n            success: true,\n            data: action.data,\n            error: null\n          }\n      }\n    case actionsTypes.SIGNUP_FAILURE:\n      return {\n        ...state,\n        signup: {\n            success: false,\n            data: null,\n            error: action.error\n          }\n      }\n      case actionsTypes.LOGOUT:\n        localStorage.removeItem('PAU')\n        return state = initData\n\n    default:\n      return {\n        ...state\n      }\n  }\n}\n","import { actionsTypes } from './../actions/actionsTypes'\n\nconst initData = {\n  health: {\n    success: false,\n    data: null,\n    error: null\n  }\n}\n\nexport default function (state = initData, action) {\n  switch (action.type) {\n    case actionsTypes.GET_HEALTH_SUCCESS:\n      return {\n        ...state,\n        health: {\n            success: true,\n            data: action.data,\n            error: null\n          }\n      }\n    case actionsTypes.GET_HEALTH_FAILURE:\n      return {\n        ...state,\n        health: {\n            success: false,\n            data: null,\n            error: action.error\n          }\n      }\n    default:\n      return {\n        ...state\n      }\n  }\n}\n","import { actionsTypes } from './../actions/actionsTypes'\n\nconst initData = {\n  history: {\n    success: false,\n    data: null,\n    error: null\n  },\n\n  uploadHistory: {\n    success: false,\n    data: null,\n    error: null\n  },\n\n  addHistory: {\n    success: false,\n    data: null,\n    error: null\n  }\n}\n\nexport default function (state = initData, action) {\n  switch (action.type) {\n    case actionsTypes.GET_HISTORY_SUCCESS:\n      return {\n        ...state,\n        history: {\n          success: true,\n          data: action.data,\n          error: null\n        }\n      }\n    case actionsTypes.GET_HISTORY_FAILURE:\n      return {\n        ...state,\n        history: {\n          success: false,\n          data: null,\n          error: action.error\n        }\n      }\n    case actionsTypes.UPLOAD_PATIENT_HISTORY_SUCCESS:\n      return {\n        ...state,\n        uploadHistory: {\n          success: true,\n          data: action.data,\n          error: null\n        }\n      }\n    case actionsTypes.UPLOAD_PATIENT_HISTORY_FAILURE:\n      return {\n        ...state,\n        uploadHistory: {\n          success: false,\n          data: null,\n          error: action.error\n        }\n      }\n    case actionsTypes.ADD_PATIENT_HISTORY_SUCCESS:\n      return {\n        ...state,\n        addHistory: {\n          success: true,\n          data: action.data,\n          error: null\n        }\n      }\n    case actionsTypes.ADD_PATIENT_HISTORY_FAILURE:\n      return {\n        ...state,\n        addHistory: {\n          success: false,\n          data: null,\n          error: action.error\n        }\n      }\n    default:\n      return {\n        ...state\n      }\n  }\n}\n","import { actionsTypes } from './../actions/actionsTypes'\n\nconst initData = {\n  patients: {\n    success: false,\n    data: null,\n    error: null\n  }\n}\n\nexport default function (state = initData, action) {\n  switch (action.type) {\n    case actionsTypes.GET_PATIENTS_SUCCESS:\n      return {\n        ...state,\n        patients: {\n            success: true,\n            data: action.data,\n            error: null\n          }\n      }\n    case actionsTypes.GET_PATIENTS_FAILURE:\n      return {\n        ...state,\n        patients: {\n            success: false,\n            data: null,\n            error: action.error\n          }\n      }\n    default:\n      return {\n        ...state\n      }\n  }\n}\n","import { actionsTypes } from './../actions/actionsTypes'\n\nconst initData = {\n  addPatientInfo: {\n    success: false,\n    data: null,\n    error: null\n  },\n\n  addPatientHealthInfo:{\n    success: false,\n    data: null,\n    error: null\n  },\n\n  getPatientHealthInfo:{\n    success: false,\n    data: null,\n    error: null\n  }\n}\n\nexport default function (state = initData, action) {\n  switch (action.type) {\n    case actionsTypes.SET_PATIENT_PERSONAL_INFO_SUCCESS:\n      return {\n        ...state,\n        addPatientInfo: {\n            success: true,\n            data: action.data,\n            error: null\n          }\n      }\n    case actionsTypes.SET_PATIENT_PERSONAL_INFO_FAILURE:\n      return {\n        ...state,\n        addPatientInfo: {\n            success: false,\n            data: null,\n            error: action.error\n          }\n      }\n      case actionsTypes.SET_PATIENT_HEALTH_INFO_SUCCESS:\n        return {\n          ...state,\n          addPatientHealthInfo: {\n              success: true,\n              data: action.data,\n              error: null\n            }\n        }\n      case actionsTypes.SET_PATIENT_HEALTH_INFO_FAILURE:\n        return {\n          ...state,\n          addPatientHealthInfo: {\n              success: false,\n              data: null,\n              error: action.error\n            }\n        }\n        case actionsTypes.GET_PATIENT_HEALTH_RECORD_SUCCESS:\n        return {\n          ...state,\n          getPatientHealthInfo: {\n              success: true,\n              data: action.data,\n              error: null\n            }\n        }\n      case actionsTypes.GET_PATIENT_HEALTH_RECORD_FAILURE:\n        return {\n          ...state,\n          getPatientHealthInfo: {\n              success: false,\n              data: null,\n              error: action.error\n            }\n        }\n      case actionsTypes.CLEAR_PATIENT_HEALTH_INFO:\n          return {\n            ...state,\n            addPatientHealthInfo: {\n                success: true,\n                data: null,\n                error: null\n              }\n          }\n    default:\n      return {\n        ...state\n      }\n  }\n}\n","import { actionsTypes } from './../actions/actionsTypes'\n\nconst initData = {\n  currentUser: {\n    success: false,\n    data: null,\n    error: null\n  },\n\n  updateCurrentUser:{\n    success: false,\n    data: null,\n    error: null\n  }\n\n}\n\nexport default function (state = initData, action) {\n  switch (action.type) {\n    case actionsTypes.GET_DOCTOR_PROFILE_SUCCESS:\n      return {\n        ...state,\n        currentUser: {\n            success: true,\n            data: action.data,\n            error: null\n          }\n      }\n    case actionsTypes.GET_DOCTOR_PROFILE_FAILURE:\n      return {\n        ...state,\n        currentUser: {\n            success: false,\n            data: null,\n            error: action.error\n          }\n      }\n      case actionsTypes.UPDATE_DOCTOR_PROFILE_SUCCESS:\n      return {\n        ...state,\n        updateCurrentUser: {\n            success: true,\n            data: action.data,\n            error: null\n          }\n      }\n    case actionsTypes.UPDATE_DOCTOR_PROFILE_FAILURE:\n      return {\n        ...state,\n        updateCurrentUser: {\n            success: false,\n            data: null,\n            error: action.error\n          }\n      }\n    default:\n      return {\n        ...state\n      }\n  }\n}\n","import { combineReducers } from \"redux\";\nimport auth from './auth';\nimport health from './health';\nimport history from './history';\nimport patient from './patient';\nimport enroll from './enroll';\nimport user from './user';\n\nexport default combineReducers({\n    auth,\n    health,\n    history,\n    patient,\n    enroll,\n    user\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'antd/dist/antd.css';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducer from './store/reducers';\nimport { BrowserRouter } from 'react-router-dom';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)));\n\nconst app = (\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nReactDOM.render(app, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}